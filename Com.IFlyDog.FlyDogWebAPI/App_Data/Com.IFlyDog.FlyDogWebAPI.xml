<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Com.IFlyDog.FlyDogWebAPI</name>
    </assembly>
    <members>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.App_Start.CachingSwaggerProvider">
            <summary>
            swagger
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.App_Start.CachingSwaggerProvider.GetControllerDesc">
            <summary>
            从API文档中读取控制器描述
            </summary>
            <returns>所有控制器描述</returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.SwaggerConfig">
            <summary>
            
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.SwaggerConfig.Register">
            <summary>
            
            </summary>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.WebApiConfig">
            <summary>
            web api配置
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.WebApiConfig.Register(System.Web.Http.HttpConfiguration)">
            <summary>
            注册
            </summary>
            <param name="config"></param>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.AllocateController">
            <summary>
            仓库调拨api接口
            </summary>
        </member>
        <member name="F:Com.IFlyDog.FlyDogWebAPI.Controllers.AllocateController._allocateService">
            <summary>
            依赖注入
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AllocateController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IAllocateService)">
            <summary>
            依赖注入方法重构
            </summary>
            <param name="allocateService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AllocateController.Get(Com.IFlyDog.APIDTO.AllocateSelect)">
            <summary>
            查询所有进货信息[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Com.IFlyDog.FlyDogWebAPI.Controllers.AllocateController.GetByID(System.Int64)”忽略有格式错误的 XML 注释 -->
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AllocateController.Add(Com.IFlyDog.APIDTO.AllocateAdd)">
            <summary>
            添加
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AllocateController.SmartAllocatePrint(System.String,System.Int64)">
            <summary>
            根据仓库进货id查询详情打印
            </summary>
            <param name="allocateID"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.AppointmentController">
            <summary>
            预约相关接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AppointmentController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IAppointmentService)">
            <summary>
            构造函数
            </summary>
            <param name="appointmentService">服务</param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AppointmentController.AppointmentAdd(Com.IFlyDog.APIDTO.AppointmentAdd)">
            <summary>
            添加预约
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AppointmentController.GetAppointmentToday(System.Int64)">
            <summary>
            获取今日新增预约
            </summary>
            <param name="hospitalID">医院ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AppointmentController.GetAppointmentComeToday(System.Int64)">
            <summary>
            获取今日上门预约
            </summary>
            <param name="hospitalID">医院ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AppointmentController.GetDetail(System.Int64)">
            <summary>
            获取预约详细信息
            </summary>
            <param name="ID">预约记录ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AppointmentController.Update(Com.IFlyDog.APIDTO.AppointmentUpdate)">
            <summary>
            修改
            </summary>
            <param name="dto">修改信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AppointmentController.Delete(Com.IFlyDog.APIDTO.AppointmentDelete)">
            <summary>
            删除
            </summary>
            <param name="dto">删除信息</param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.AuditApplyController">
            <summary>
            我的审核申请记录api
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AuditApplyController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IAuditApplyService)">
            <summary>
            依赖注入类
            </summary>
            <param name="auditApplyService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AuditApplyController.Get(Com.IFlyDog.APIDTO.AuditApplySelect)">
            <summary>
            查询当前用户所有的审核申请[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AuditApplyController.GetAuditDetail(System.Int64,System.String,System.Int64,System.Int64)">
            <summary>
            根据操作i的，类型查询审核详情
            </summary>
            <param name="orderID">操作id，目前主要是咨询或者开发人员变更id</param>
            <param name="type"> 4 咨询人员变更 5 开发人员变更</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AuditApplyController.Delete(Com.IFlyDog.APIDTO.AuditApplyDelete)">
            <summary>
            取消我的审核申请[所属角色("CRM")]
            </summary>
            <param name="dto">取消我的审核申请</param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.AuditRuleController">
            <summary>
            审核规则api
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AuditRuleController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IAuditRuleService)">
            <summary>
            依赖注入类
            </summary>
            <param name="auditRuleService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AuditRuleController.GetByHtData(System.String,System.Int32)">
            <summary>
            新增审核规则时查询当前医院是否已经存在相应的审核规则，如果存在则不能重复添加
            </summary>
            <param name="hospitalID"></param>
            <param name="Type"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AuditRuleController.Add(Com.IFlyDog.APIDTO.AuditRuleAdd)">
            <summary>
            添加审核规则[所属角色("CRM")]
            </summary>
            <param name="dto">单位信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AuditRuleController.Update(Com.IFlyDog.APIDTO.AuditRuleUpdate)">
            <summary>
            修改审核规则[所属角色("CRM")]
            </summary>
            <param name="dto">修改审核规则</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AuditRuleController.Get(System.Int64)">
            <summary>
            查询所有审核规则信息[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AuditRuleController.GetByID(System.Int64)">
            <summary>
            根据id获取审核规则详情
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AuditRuleController.StopOrUse(Com.IFlyDog.APIDTO.AuditRuleStopOrUse)">
            <summary>
            启用停用审核规则[所属角色("CRM")]
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.AuditWorkbenchController">
            <summary>
            审核工作台api相关接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AuditWorkbenchController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IAuditWorkbenchService)">
            <summary>
            依赖注入类
            </summary>
            <param name="auditWorkbenchService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AuditWorkbenchController.AuditOperationAdd(Com.IFlyDog.APIDTO.AuditOperationAdd)">
            <summary>
            审核操作[所属角色("CRM")]
            </summary>
            <param name="dto">审核操作</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AuditWorkbenchController.GetAllAudit(Com.IFlyDog.APIDTO.AuditWorkbenchSelect)">
            <summary>
            查询所有待审核信息[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AuditWorkbenchController.GetAuditRecord(Com.IFlyDog.APIDTO.AuditRecordSelect)">
            <summary>
            查询所有审核记录信息[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AuditWorkbenchController.GetByType(Com.IFlyDog.APIDTO.AuditUserSelect)">
            <summary>
            点击查询查询此类型的审核用户信息
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.AuditWorkbenchController.GetAuditOrderInfo(System.Int64,System.String)">
            <summary>
            点击审核跳转到审核界面如果是开发人员或者咨询人员需要传递类型 
            </summary>
            <param name="id"></param>
            <param name="type">4 开发人员  5咨询人员</param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.BackOrderController">
            <summary>
            退项目单相关接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.BackOrderController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IBackOrderService)">
            <summary>
            构造函数
            </summary>
            <param name="backOrderService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.BackOrderController.Add(Com.IFlyDog.APIDTO.BackOrderAdd)">
            <summary>
            添加
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.BackOrderController.Delete(Com.IFlyDog.APIDTO.DepositOrderDelete)">
            <summary>
            删除
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.BackOrderController.GetDetail(System.Int64,System.Int64,System.Int64)">
            <summary>
            查询详细
            </summary>
            <param name="userID">操作用户ID</param>
            <param name="customerID">顾客ID</param>
            <param name="orderID">订单ID</param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.BedController">
            <summary>
            床位相关接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.BedController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IBedService)">
            <summary>
            构造函数
            </summary>
            <param name="bedService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.BedController.Add(Com.IFlyDog.APIDTO.BedAdd)">
            <summary>
            添加
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.BedController.Update(Com.IFlyDog.APIDTO.BedAdd)">
            <summary>
            部门修改
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.BedController.Get(System.Int64,Com.IFlyDog.CommonDTO.CommonStatus)">
            <summary>
            查询当前医院下的所有直接部门
            </summary>
            <param name="hospitalID">所属医院ID</param>
            <param name="status">使用状态，默认所有</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.BedController.GetByID(System.Int64)">
            <summary>
            根据ID获取信息
            </summary>
            <param name="ID"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.BedController.GetSelect(System.Int64)">
            <summary>
            下拉菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.BedController.StopOrUse(Com.IFlyDog.APIDTO.BedStop)">
            <summary>
            使用停用
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.BillController">
            <summary>
            发票相关接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.BillController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IBillService)">
            <summary>
            构造函数
            </summary>
            <param name="billService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.BillController.GetCanBillCharges(System.Int64,System.Int64)">
            <summary>
            查询可开发票项目
            </summary>
            <param name="customerID">顾客ID</param>
            <param name="hospitalID">医院ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.BillController.Add(Com.IFlyDog.APIDTO.BillAdd)">
            <summary>
            添加发票
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.BillController.Delete(Com.IFlyDog.APIDTO.BillDelete)">
            <summary>
            删除发票
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.BillController.GetBillToday(System.Int64)">
            <summary>
            获取今日发票记录
            </summary>
            <param name="hospitalID"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackCategoryController">
            <summary>
            回访类型设置
            </summary>
        </member>
        <member name="F:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackCategoryController._callbackCategoryService">
            <summary>
            依赖注入
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackCategoryController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ICallbackCategoryService)">
            <summary>
            方法重构
            </summary>
            <param name="callbackCategoryService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackCategoryController.Get">
            <summary>
            查询所有
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackCategoryController.Add(Com.IFlyDog.APIDTO.SmartCallbackCategoryAdd)">
            <summary>
            添加投诉类型[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackCategoryController.GetByID(System.Int64)">
            <summary>
            通过ID查询一条数据
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackCategoryController.StopOrUse(Com.IFlyDog.APIDTO.SmartCallbackCategoryStopOrUse)">
            <summary>
            添加[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackCategoryController.Update(Com.IFlyDog.APIDTO.SmartCallbackCategoryUpdate)">
            <summary>
            修改
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackCategoryController.GetSelect">
            <summary>
            下拉菜单
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackController">
            <summary>
            回访相关接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ICallbackService)">
            <summary>
            依赖注入
            </summary>
            <param name="callbackService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackController.CallbackAdd(Com.IFlyDog.APIDTO.CallbackAdd)">
            <summary>
            客户档案里面添加回访
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackController.CallbackAddByDesk(Com.IFlyDog.APIDTO.CallbackAddByDesk)">
            <summary>
            回访工作台回访
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackController.CallbackRemindAdd(Com.IFlyDog.APIDTO.CallbackRemindAdd)">
            <summary>
            客户档案里面添加回访提醒
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackController.CallbackPlanAdd(Com.IFlyDog.APIDTO.CallbackPlanAdd)">
            <summary>
            客户档案里面添加回访计划
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackController.CallbackSelect(Com.IFlyDog.APIDTO.CallbackSelect)">
            <summary>
            回访工作台查询
            </summary>
            <param name="dto">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackController.UpdateCallback(Com.IFlyDog.APIDTO.CallbackUpdate)">
            <summary>
            修改回访
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackController.UpdateCallbackRemind(Com.IFlyDog.APIDTO.CallbackRemindUpdate)">
            <summary>
            修改回访提醒
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackController.GetCallbackDetail(System.Int64)">
            <summary>
            获取回放详细，在回访工作台点击回访查询出来
            </summary>
            <param name="ID">回访记录ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackController.GetCallbackByCustomerID(System.Int64)">
            <summary>
            个人回访情况
            </summary>
            <param name="customerID">顾客ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackController.GetCallbackSet">
            <summary>
            获取可使用的回访计划
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackController.GetCallbackSetDetail(System.Int64)">
            <summary>
            获取回访计划详细内容
            </summary>
            <param name="setID">回访计划ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackController.GetCallbackRemindDetail(System.Int64,System.Int64,System.Int64)">
            <summary>
            更新回访提醒之前获取回访提醒详细
            </summary>
            <param name="ID">回访记录ID</param>
            <param name="userID">回访人</param>
            <param name="customerID">顾客ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackController.GetCallbackUpdateDetail(System.Int64,System.Int64,System.Int64)">
            <summary>
            更新回访之前获取回访详细
            </summary>
            <param name="ID">回访记录ID</param>
            <param name="userID">回访人</param>
            <param name="customerID">顾客ID</param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackGroupController">
            <summary>
            回访组设置
            </summary>
        </member>
        <member name="F:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackGroupController._callbackGroupService">
            <summary>
            依赖注入
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackGroupController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ICallbackGroupService)">
            <summary>
            依赖注入方法重构
            </summary>
            <param name="callbackGroupService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackGroupController.Get">
            <summary>
            查询所有
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackGroupController.GetByID(System.Int64)">
            <summary>
            根据ID查询一条数据
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackGroupController.StopOrUse(Com.IFlyDog.APIDTO.CallbackGroup.SmartCallbackGroupStopOrUse)">
            <summary>
            使用停用
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackGroupController.Add(Com.IFlyDog.APIDTO.CallbackGroup.SmartCallbackGroupAdd)">
            <summary>
            添加
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CallbackGroupController.Update(Com.IFlyDog.APIDTO.CallbackGroup.SmartCallbackGroupUpdate)">
            <summary>
            修改
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.CardCategoryController">
            <summary>
            银行卡相关接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CardCategoryController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ICardCategoryService)">
            <summary>
            依赖注入类
            </summary>
            <param name="cardCategoryService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CardCategoryController.Add(Com.IFlyDog.APIDTO.CardCategoryAdd)">
            <summary>
            添加银行卡
            </summary>
            <param name="dto">银行卡信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CardCategoryController.Update(Com.IFlyDog.APIDTO.CardCategoryUpdate)">
            <summary>
            更新银行卡信息
            </summary>
            <param name="dto">银行卡信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CardCategoryController.StopOrUse(Com.IFlyDog.APIDTO.CardCategoryStopOrUse)">
            <summary>
            银行卡使用停用
            </summary>
            <param name="dto">参数集</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CardCategoryController.Get">
            <summary>
            查询所有银行卡
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CardCategoryController.GetByID(System.Int64)">
            <summary>
            查询银行卡详细
            </summary>
            <param name="id">银行卡ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CardCategoryController.GetSelect">
            <summary>
            下拉菜单
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.CaseTemplateController">
            <summary>
            病例模板api
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CaseTemplateController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ICaseTemplateService)">
            <summary>
            依赖注入类
            </summary>
            <param name="caseTemplateService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CaseTemplateController.Add(Com.IFlyDog.APIDTO.CaseTemplateAdd)">
            <summary>
            添加病例模板[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CaseTemplateController.Update(Com.IFlyDog.APIDTO.CaseTemplateUpdate)">
            <summary>
            修改病例模板[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CaseTemplateController.Get(Com.IFlyDog.APIDTO.CaseTemplateSelect)">
            <summary>
            查询所有病例模板[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CaseTemplateController.GetByID(System.Int64)">
            <summary>
            根据id获取病例模板
            </summary>
            <param name="id">单位ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CaseTemplateController.GetSelect">
            <summary>
            下拉菜单
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.CashierController">
            <summary>
            收银相关API
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CashierController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ICashierService)">
            <summary>
            构造函数
            </summary>
            <param name="cashierService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CashierController.GetNoPaidOrders(System.Int64)">
            <summary>
            待收费列表
            </summary>
            <param name="hospitalID"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CashierController.DepositOrderCashier(Com.IFlyDog.APIDTO.DepositCashierAdd)">
            <summary>
            预收款收银
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CashierController.GetCanCashier(System.Int64,System.Int64,System.Int64)">
            <summary>
            获取订单收银时可使用的券跟预收款
            </summary>
            <param name="hospitalID"></param>
            <param name="customerID"></param>
            <param name="orderID"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CashierController.OrderCashier(Com.IFlyDog.APIDTO.OrderCashierAdd)">
            <summary>
            订单收银
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CashierController.DepositRebateOrderCashier(Com.IFlyDog.APIDTO.DepositRebateCashierAdd)">
            <summary>
            退款收银
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CashierController.BackOrderCashier(Com.IFlyDog.APIDTO.BackCashierAdd)">
            <summary>
            退项目单
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CashierController.DebtCashier(Com.IFlyDog.APIDTO.DebtCashierAdd)">
            <summary>
            欠款收银
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CashierController.GetCashierUpdateInfo(System.Int64)">
            <summary>
            获取更新收银详细信息
            </summary>
            <param name="cashierID"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CashierController.CashierUpdate(Com.IFlyDog.APIDTO.CashierUpdate)">
            <summary>
            订单修改
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CashierController.GetCashierToday(System.Int64)">
            <summary>
            今日收银记录
            </summary>
            <param name="hospitalID"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CashierController.GetCashier(Com.IFlyDog.APIDTO.CashierSelect)">
            <summary>
            收银记录
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CashierController.Print(System.Int64)">
            <summary>
            打印
            </summary>
            <param name="ID"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.ChannelController">
            <summary>
            渠道相关API
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChannelController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IChannelService)">
            <summary>
            依赖注入类
            </summary>
            <param name="channelService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChannelController.Add(Com.IFlyDog.APIDTO.ChannelAdd)">
            <summary>
            添加渠道
            </summary>
            <param name="dto">渠道信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChannelController.Update(Com.IFlyDog.APIDTO.ChannelUpdate)">
            <summary>
            渠道修改
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChannelController.StopOrUse(Com.IFlyDog.APIDTO.ChannelStopOrUse)">
            <summary>
            渠道使用停用
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChannelController.Get">
            <summary>
            查询所有渠道
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChannelController.GetByIsOk">
            <summary>
            查询所有可使用的渠道
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChannelController.GetByID(System.Int64)">
            <summary>
            根据渠道ID获取渠道信息
            </summary>
            <param name="id">渠道ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChannelController.GetSelect">
            <summary>
            渠道下拉菜单
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.ChannelGroupController">
            <summary>
            渠道组api
            </summary>
        </member>
        <member name="F:Com.IFlyDog.FlyDogWebAPI.Controllers.ChannelGroupController._channelGroupService">
            <summary>
            依赖注入
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChannelGroupController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IChannelGroupService)">
            <summary>
            依赖注入方法重构
            </summary>
            <param name="channelGroupService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChannelGroupController.Get">
            <summary>
            查询所有渠道组信息[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChannelGroupController.GetByID(System.Int64)">
            <summary>
            根据ID获取渠道组信息
            </summary>
            <param name="id">单位ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChannelGroupController.Delete(Com.IFlyDog.APIDTO.ChannelGroupDelete)">
            <summary>
            删除渠道组信息s[所属角色("CRM")]
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChannelGroupController.Add(Com.IFlyDog.APIDTO.ChannelGroupAdd)">
            <summary>
            添加渠道组[所属角色("CRM")]
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChannelGroupController.Update(Com.IFlyDog.APIDTO.ChannelGroupUpdate)">
            <summary>
            修改渠道组[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChannelGroupController.GetChannelGroupCheck">
            <summary>
            检测所有渠道信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeCategoryController">
            <summary>
            项目分类api
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeCategoryController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IChargeCategoryService)">
            <summary>
            依赖注入类
            </summary>
            <param name="chargeCategoryService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeCategoryController.Add(Com.IFlyDog.APIDTO.ChargeCategoryAdd)">
            <summary>
            添加项目分类类型[所属角色("CRM")]
            </summary>
            <param name="dto">项目分类信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeCategoryController.Update(Com.IFlyDog.APIDTO.ChargeCategoryUpdate)">
            <summary>
            项目分类修改[所属角色("CRM")]
            </summary>
            <param name="dto">项目分类信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeCategoryController.Get">
            <summary>
            查询所有项目分类信息[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeCategoryController.GetByID(System.Int64)">
            <summary>
            根据ID获取项目分类信息
            </summary>
            <param name="id">项目分类ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeCategoryController.Delete(Com.IFlyDog.APIDTO.ChargeCategoryDelete)">
            <summary>
            删除项目分类信息[所属角色("CRM")]
            </summary>
            <param name="dto">删除项目分类信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeCategoryController.GetSelect">
            <summary>
            下拉菜单
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeController">
            <summary>
            收费项目api
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IChargeService)">
            <summary>
            依赖注入类
            </summary>
            <param name="chargeService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeController.Add(Com.IFlyDog.APIDTO.ChargeAdd)">
            <summary>
            添加收费项目[所属角色("CRM")]
            </summary>
            <param name="dto">添加收费项目</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeController.Update(Com.IFlyDog.APIDTO.ChargeUpdate)">
            <summary>
            修改收费项目[所属角色("CRM")]
            </summary>
            <param name="dto">修改收费项目</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeController.Get(Com.IFlyDog.APIDTO.ChargeSelect)">
            <summary>
            查询所有收费项目信息[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeController.GetCheckCharge(Com.IFlyDog.APIDTO.ChargeSelect)">
            <summary>
            检测收费项目
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeController.GetData(Com.IFlyDog.APIDTO.ChargeSelect)">
            <summary>
            查询所有收费项目信息（不分页给弹窗使用）
            </summary>
            <returns></returns>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeController.GetByID(System.Int64)">
            <summary>
            根据ID查询一条数据
            </summary>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeDiscountController">
            <summary>
            项目折扣api
            </summary>
        </member>
        <member name="F:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeDiscountController._chargeDiscountService">
            <summary>
            依赖注入
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeDiscountController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IChargeDiscountService)">
            <summary>
            依赖注入方法重构
            </summary>
            <param name="chargeDiscountService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeDiscountController.Get(Com.IFlyDog.APIDTO.ChargeDiscountSelect)">
            <summary>
            查询所有项目折扣[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeDiscountController.GetByID(System.Int64)">
            <summary>
            根据ID查询一条数据
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeDiscountController.Add(Com.IFlyDog.APIDTO.ChargeDiscountAdd)">
            <summary>
            添加
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeDiscountController.Update(Com.IFlyDog.APIDTO.ChargeDiscountUpdate)">
            <summary>
            修改
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeSetController">
            <summary>
            套餐管理api
            </summary>
        </member>
        <member name="F:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeSetController._chargeSetService">
            <summary>
            依赖注入
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeSetController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IChargeSetService)">
            <summary>
            依赖注入方法重构
            </summary>
            <param name="chargeSetService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeSetController.Get(Com.IFlyDog.APIDTO.ChargeSetSelect)">
            <summary>
            查询所有套餐信息[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeSetController.GetByID(System.Int64)">
            <summary>
            根据ID查询一条数据
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeSetController.Add(Com.IFlyDog.APIDTO.ChargeSetAdd)">
            <summary>
            添加
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ChargeSetController.Update(Com.IFlyDog.APIDTO.ChargeSetUpdate)">
            <summary>
            修改
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.CheckController">
            <summary>
            库存盘点api
            </summary>
        </member>
        <member name="F:Com.IFlyDog.FlyDogWebAPI.Controllers.CheckController._checkService">
            <summary>
            依赖注入
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CheckController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ICheckService)">
            <summary>
            依赖注入方法重构
            </summary>
            <param name="checkService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CheckController.Get(Com.IFlyDog.APIDTO.CheckSelect)">
            <summary>
            查询所有盘点信息[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CheckController.GetByID(System.Int64)">
            <summary>
            根据ID查询一条数据
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CheckController.Add(Com.IFlyDog.APIDTO.CheckAdd)">
            <summary>
            添加
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.ClubController">
            <summary>
            单项目管理api
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ClubController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IClubService)">
            <summary>
            依赖注入类
            </summary>
            <param name="clubService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ClubController.Add(Com.IFlyDog.APIDTO.ClubAdd)">
            <summary>
            添加单项目管理[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ClubController.Get(System.String)">
            <summary>
            查询所有单项目管理信息[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ClubController.Delete(Com.IFlyDog.APIDTO.ClubDelete)">
            <summary>
            删除单项目管理信息[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.ComplainCategoryController">
            <summary>
            投诉类型API
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ComplainCategoryController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IComplainCategoryService)">
            <summary>
            依赖注入类
            </summary>
            <param name="complainCategoryService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ComplainCategoryController.Get">
            <summary>
            查询所有投诉类型[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ComplainCategoryController.Add(Com.IFlyDog.APIDTO.SmartComplainCategoryAdd)">
            <summary>
            添加投诉类型[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ComplainCategoryController.GetByID(System.Int64)">
            <summary>
            通过ID查询一条数据
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ComplainCategoryController.StopOrUse(Com.IFlyDog.APIDTO.SmartComplainCategoryStopOrUse)">
            <summary>
            添加投诉类型[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ComplainCategoryController.Update(Com.IFlyDog.APIDTO.SmartComplainCategoryUpdate)">
            <summary>
            修改投诉
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ComplainCategoryController.GetSelect">
            <summary>
            下拉菜单
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.ComplainController">
            <summary>
            投诉处理api
            </summary>
        </member>
        <member name="F:Com.IFlyDog.FlyDogWebAPI.Controllers.ComplainController._complainService">
            <summary>
            依赖注入
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ComplainController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IComplainService)">
            <summary>
            依赖注入方法重构
            </summary>
            <param name="complainService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ComplainController.Get(Com.IFlyDog.APIDTO.ComplainSelect)">
            <summary>
            查询所有投诉信息[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ComplainController.GetByID(System.Int64)">
            <summary>
            根据ID查询一条数据
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ComplainController.Update(Com.IFlyDog.APIDTO.ComplainUpdate)">
            <summary>
            修改
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.ConsultController">
            <summary>
            咨询相关API
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ConsultController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IConsultService)">
            <summary>
            构造函数
            </summary>
            <param name="consultService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ConsultController.GetConsult(System.Int64)">
            <summary>
            获取顾客咨列表
            </summary>
            <param name="customerID">顾客ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ConsultController.ConsultAdd(Com.IFlyDog.APIDTO.ConsultAddUpdate)">
            <summary>
            添加咨询
            </summary>
            <param name="dto">咨询内容</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ConsultController.ConsultUpdate(Com.IFlyDog.APIDTO.ConsultAddUpdate)">
            <summary>
            咨询修改
            </summary>
            <param name="dto">咨询内容</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ConsultController.ConsultDelete(Com.IFlyDog.APIDTO.ConsultDelete)">
            <summary>
            咨询删除
            </summary>
            <param name="dto">删除信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ConsultController.GetConsultDetail(System.Int64)">
            <summary>
            获取咨询详细信息
            </summary>
            <param name="ID">咨询记录ID</param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.CouponActivityDetailController">
            <summary>
            卷活动详情
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CouponActivityDetailController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ICouponActivityDetailService)">
            <summary>
            依赖注入类
            </summary>
            <param name="couponActivityDetailService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CouponActivityDetailController.Add(Com.IFlyDog.APIDTO.CouponActivityDetailAdd)">
            <summary>
            添加卷活动详情
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CouponActivityDetailController.Get(Com.IFlyDog.APIDTO.CouponActivityDetailSelect)">
            <summary>
            查询所有卷活动详情
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CouponActivityDetailController.CouponActivityDetailDelete(Com.IFlyDog.APIDTO.CouponActivityDetailDelete)">
            <summary>
            单个删除卷活动详情
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CouponActivityDetailController.CouponActivityDetailDeleteAll(Com.IFlyDog.APIDTO.CouponActivityDetailDelete)">
            <summary>
            删除全部未激活的卷活动详情
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.CouponActivityServiceController">
            <summary>
            添加卷活动api
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CouponActivityServiceController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ICouponActivityService)">
            <summary>
            依赖注入类
            </summary>
            <param name="couponActivityService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CouponActivityServiceController.Add(Com.IFlyDog.APIDTO.CouponActivityAdd)">
            <summary>
            添加卷活动
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CouponActivityServiceController.Get(Com.IFlyDog.APIDTO.CouponActivitySelect)">
            <summary>
            查询所有卷活动
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CouponActivityServiceController.GetByID(System.Int64)">
            <summary>
            根据id获取卷活动详情
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CouponActivityServiceController.CouponActivityDelete(Com.IFlyDog.APIDTO.CouponActivityDelete)">
            <summary>
            删除卷活动，以及卷活动详情
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CouponActivityServiceController.Update(Com.IFlyDog.APIDTO.CouponActivityUpdate)">
            <summary>
            更新卷活动
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.CouponCategoryController">
            <summary>
            代金券类型api
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CouponCategoryController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ICouponCategoryService)">
            <summary>
            依赖注入类
            </summary>
            <param name="couponCategoryService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CouponCategoryController.Add(Com.IFlyDog.APIDTO.CouponCategoryAdd)">
            <summary>
            添加代金券类型管理[所属角色("CRM")]
            </summary>
            <param name="dto">代金券类型</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Com.IFlyDog.FlyDogWebAPI.Controllers.CouponCategoryController.Update(Com.IFlyDog.APIDTO.CouponCategoryUpdate)”忽略有格式错误的 XML 注释 -->
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CouponCategoryController.Get">
            <summary>
            获取全部代金券类型信息，
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CouponCategoryController.GetByHospitalID(System.Int64)">
            <summary>
            根据医院id查询当前医院状态为可使用的所有卷类型s
            </summary>
            <param name="hospitalID"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CouponCategoryController.GetByID(System.Int64)">
            <summary>
            根据ID获取代金券类型
            </summary>
            <param name="id">代金券类型</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CouponCategoryController.GetSelect(System.Int64)">
            <summary>
            下拉菜单
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.CouponController">
            <summary>
            代金券相关接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CouponController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ICouponService)">
            <summary>
            构造函数
            </summary>
            <param name="couponService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CouponController.GetNoDoneOrders(System.Int64,System.Int64)">
            <summary>
            查询剩余代金券
            </summary>
            <param name="hospitalID"></param>
            <param name="customerID"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CouponController.SendCoupon(Com.IFlyDog.APIDTO.SendCoupon)">
            <summary>
            手工赠券
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CouponController.DeductPoint(Com.IFlyDog.APIDTO.SendCoupon)">
            <summary>
            手动扣减券
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerController">
            <summary>
            顾客相关接口
            </summary>
        </member>
        <member name="F:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerController._customerService">
            <summary>
            依赖注入
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ICustomerService)">
            <summary>
            依赖注入方法重构
            </summary>
            <param name="customerService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerController.AddAsync(Com.IFlyDog.APIDTO.CustomerAdd)">
            <summary>
            添加顾客
            </summary>
            <param name="dto">顾客信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerController.CustomerIdentifyAsync(System.String)">
            <summary>
            顾客识别
            </summary>
            <param name="name">各种识别码</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerController.CustomerCreateTodayAsync(System.Int64,Com.IFlyDog.CommonDTO.CustomerRegisterType)">
            <summary>
            查询今日登记顾客
            </summary>
            <param name="hospitalID">医院ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerController.GetCustomerManager(Com.IFlyDog.APIDTO.CustomerSelect)">
            <summary>
            客户管理查询
            </summary>
            <param name="dto">筛选条件</param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerGroupController">
            <summary>
            客户组api
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerGroupController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ICustomerGroupService)">
            <summary>
            依赖注入类
            </summary>
            <param name="customerGroupService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerGroupController.Add(Com.IFlyDog.APIDTO.CustomerGroupAdd)">
            <summary>
            添加客户组[所属角色("CRM")]
            </summary>
            <param name="dto">添加客户组</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerGroupController.CustomerFilterFiltrateAdd(Com.IFlyDog.APIDTO.CustomerFilterFiltrateAdd)">
            <summary>
            按照条件筛选出客户结果后保存客户组
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerGroupController.CustomerGroupBatchCallbackAdd(Com.IFlyDog.APIDTO.CustomerGroupBatchCallbackAdd)">
            <summary>
            批量添加回访
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerGroupController.CustomerGroupBatchSSMAdd(Com.IFlyDog.APIDTO.BatchSSM)">
            <summary>
            批量发送短信
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerGroupController.CustomerGroupDetailAdd(Com.IFlyDog.APIDTO.CustomerGroupDetailAdd)">
            <summary>
            添加客户组详情客户
            </summary>CustomerGroupBatchCallbackAdd
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerGroupController.CustomerGroupDetailDeleteAll(Com.IFlyDog.APIDTO.CustomerGroupDetailDeleteAll)">
             <summary>
            删除全部客户组客户详情
             </summary>
             <param name="dto"></param>CustomerGroupDetailAdd
             <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerGroupController.Delete(Com.IFlyDog.APIDTO.CustomerGroupDelete)">
            <summary>
            删除客户组
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerGroupController.Get(Com.IFlyDog.APIDTO.CustomerGroupSelect)">
            <summary>
            列表展示客户组
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerGroupController.GetByCustomerGroupID(Com.IFlyDog.APIDTO.CustomerGroupDetailSelect)">
            <summary>
            根据客户组id查询客户组用户
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerGroupController.GetByID(System.Int64)">
            <summary>
            根据id查询客户组详情
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerGroupController.Update(Com.IFlyDog.APIDTO.CustomerGroupUpdate)">
            <summary>
            更新客户组
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerGroupController.MergeCustomerFilterAdd(Com.IFlyDog.APIDTO.MergeCustomerFilter)">
            <summary>
            合并客户组
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerGroupController.GetBasicConditionSelect(Com.IFlyDog.APIDTO.BasicConditionSelect)">
            <summary>
            基本条件查询
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerGroupController.GetAccountConditionSelect(Com.IFlyDog.APIDTO.AccountConditionSelect)">
            <summary>
            账户条件查询
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerGroupController.GetDoorConditionSelect(Com.IFlyDog.APIDTO.DoorConditionSelect)">
            <summary>
            上门条件查询
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerGroupController.GetOrderConditionSelect(Com.IFlyDog.APIDTO.OrderConditionSelect)">
            <summary>
            订单条件查询
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerGroupController.GetConsultConditionSelect(Com.IFlyDog.APIDTO.ConsultConditionSelect)">
            <summary>
            咨询条件查询
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerGroupController.GetExecuteConditionSelect(Com.IFlyDog.APIDTO.ExecuteConditionSelect)">
            <summary>
            执行条件查询
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerGroupController.GetMemberConditionSelect(Com.IFlyDog.APIDTO.MemberConditionSelect)">
            <summary>
            会员条件查询
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerGroupController.GetFailtureConditionSelect(Com.IFlyDog.APIDTO.FailtureConditionSelect)">
            <summary>
            未成交条件查询
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerGroupController.GetTagConditionSelect(Com.IFlyDog.APIDTO.TagConditionSelect)">
            <summary>
            标签条件查询
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerGroupController.GetCallbackConditionSelect(Com.IFlyDog.APIDTO.CallbackConditionSelect)">
            <summary>
            回访条件查询
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerMedicalRecordController">
            <summary>
            客户病例模板管理api
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerMedicalRecordController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ICustomerMedicalRecordService)">
            <summary>
            依赖注入类
            </summary>
            <param name="customerMedicalRecordService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerMedicalRecordController.Add(Com.IFlyDog.APIDTO.CustomerMedicalRecordAdd)">
            <summary>
            添加客户病例模板[所属角色("CRM")]
            </summary>
            <param name="dto">添加客户病例模板</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerMedicalRecordController.GetByID(System.Int64)">
            <summary>
            根据病例模板详情查询客户病例模板详情(添加客户病例功能使用)
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerMedicalRecordController.Get(Com.IFlyDog.APIDTO.CustomerMedicalRecordSelect)">
            <summary>
            列表查询客户病例信息[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerMedicalRecordController.GetByPKID(System.Int64)">
            <summary>
            根据id查询病例模板详情，客户病例模板列表使用
            </summary>
            <param name="id">单位ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerMedicalRecordController.Delete(Com.IFlyDog.APIDTO.CustomerMedicalRecordDelete)">
            <summary>
            删除顾客病例模板[所属角色("CRM")]
            </summary>
            <param name="dto">删除顾客病例模板</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerMedicalRecordController.Update(Com.IFlyDog.APIDTO.CustomerMedicalRecordUpdate)">
            <summary>
            更新客户病例模板详情[所属角色("CRM")]
            </summary>
            <param name="dto">更新客户病例模板详情</param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController">
            <summary>
            顾客档案相关接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ICustomerProfileService)">
            <summary>
            构造函数
            </summary>
            <param name="customerProfileService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.GetAppointment(System.Int64,System.Int64)">
            <summary>
            客户档案里面的预约情况
            </summary>
            <param name="userID">操作人ID</param>
            <param name="customerID">顾客ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.GetVisit(System.Int64,System.Int64)">
            <summary>
            客户档案上门情况
            </summary>
            <param name="userID">操作用户</param>
            <param name="customerID">顾客ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.SelectTageGroup">
            <summary>
            标签组选择
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.GetCustomerTageGroup(System.Int64,System.Int64)">
            <summary>
            添加顾客标签的时候查询出来的详细信息
            </summary>
            <param name="userID">操作人ID</param>
            <param name="customerID">顾客ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.AddTag(Com.IFlyDog.APIDTO.ProfileCustomerTagAdd)">
            <summary>
            客户档案添加标签
            </summary>
            <param name="dto">标签信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.AddRelation(Com.IFlyDog.APIDTO.ProfileRelationAdd)">
            <summary>
            客户档案添加关系
            </summary>
            <param name="dto">关系信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.GetRelation(System.Int64,System.Int64)">
            <summary>
            获取客户间关系
            </summary>
            <param name="userID">操作人ID</param>
            <param name="customerID">顾客ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.DeleteRelation(Com.IFlyDog.CommonDTO.CommonDelete)">
            <summary>
            客户档案删除关系
            </summary>
            <param name="dto">关系信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.GetCustomerDetail(System.Int64,System.Int64,System.Int64)">
            <summary>
            客户档案详细查询
            </summary>
            <param name="userID">用户ID</param>
            <param name="customerID">顾客ID</param>
            <param name="hospitalID">操作人所在医院ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.UpdateChannel(Com.IFlyDog.APIDTO.ProfileCustomerUpdate)">
            <summary>
            修改渠道
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.UpdateMobile(Com.IFlyDog.APIDTO.ProfileCustomerUpdate)">
            <summary>
            修改联系方式
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.UpdateMobileBackup(Com.IFlyDog.APIDTO.ProfileCustomerUpdate)">
            <summary>
            修改备用联系方式
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.UpdateCurrentConsultSymptom(Com.IFlyDog.APIDTO.ProfileCustomerUpdate)">
            <summary>
            更新主咨询项目
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.UpdateStore(Com.IFlyDog.APIDTO.ProfileCustomerUpdate)">
            <summary>
            更新推荐店家
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.ClearWechatBinding(Com.IFlyDog.APIDTO.ProfileCustomerUpdate)">
            <summary>
            清除微信绑定
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.GetCustomerInfoUpdate(System.Int64,System.Int64)">
            <summary>
            顾客资料编辑之前获取信息
            </summary>
            <param name="userID"></param>
            <param name="customerID"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.CustomerInfoUpdate(Com.IFlyDog.APIDTO.ProfileCustomerInfoUpdate)">
            <summary>
            顾客详细资料编辑
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.AddStoreCommission(Com.IFlyDog.APIDTO.ProfileStoreCommissionAdd)">
            <summary>
            添加佣金
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.DeleteStoreCommission(Com.IFlyDog.APIDTO.ProfileStoreCommissionDelete)">
            <summary>
            删除佣金
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.GetCustomerStoreCommission(System.Int64,System.Int64)">
            <summary>
            店铺佣金记录
            </summary>
            <param name="userID"></param>
            <param name="customerID"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.GetActiveCoupon(System.String)">
            <summary>
            查询激活码信息
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.AddActiveCoupon(Com.IFlyDog.APIDTO.ProfileActiveCouponAdd)">
            <summary>
            券激活
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.GetOwinerShip(System.Int64,System.Int64)">
            <summary>
            客户档案获取负责用户
            </summary>
            <param name="userID"></param>
            <param name="customerID"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.GetOwinerShipHistory(System.Int64,System.Int64,Com.IFlyDog.CommonDTO.OwnerShipType)">
            <summary>
            查询历史信息
            </summary>
            <param name="userID">操作人ID</param>
            <param name="customerID">顾客ID</param>
            <param name="type">咨询师类型</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.GetOrders(System.Int64,System.Int64)">
            <summary>
            客户档案订单情况
            </summary>
            <param name="userID">操作用户ID</param>
            <param name="customerID">顾客ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.GetMoney(System.Int64,System.Int64)">
            <summary>
            客户档案账户情况
            </summary>
            <param name="userID">操作用户ID</param>
            <param name="customerID">顾客ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.GetCharges(System.Int64,System.Int64)">
            <summary>
            客户档案消费项目
            </summary>
            <param name="userID">操作用户ID</param>
            <param name="customerID">顾客ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.CustomerProfileController.GetOperation(System.Int64,System.Int64)">
            <summary>
            客户档案划扣记录
            </summary>
            <param name="userID">操作用户ID</param>
            <param name="customerID">顾客ID</param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.DepositChargeController">
            <summary>
            预收款设置api
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DepositChargeController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IDepositChargeService)">
            <summary>
            依赖注入类
            </summary>
            <param name="depositChargeService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DepositChargeController.Add(Com.IFlyDog.APIDTO.DepositChargeAdd)">
            <summary>
            添加预收款类型管理[所属角色("CRM")]
            </summary>
            <param name="dto">预收款</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Com.IFlyDog.FlyDogWebAPI.Controllers.DepositChargeController.Update(Com.IFlyDog.APIDTO.DepositChargeUpdate)”忽略有格式错误的 XML 注释 -->
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DepositChargeController.Get">
            <summary>
            获取全部代收款类型，
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DepositChargeController.GetByID(System.Int64)">
            <summary>
            根据id获取预收款类型
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DepositChargeController.GetSelect(System.Int64)">
            <summary>
            下拉菜单
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.DepositController">
            <summary>
            预收款相关接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DepositController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IDepositService)">
            <summary>
            构造函数
            </summary>
            <param name="depositService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DepositController.AddOrder(Com.IFlyDog.APIDTO.DepositOrderAdd)">
            <summary>
            添加预收款
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DepositController.Delete(Com.IFlyDog.APIDTO.DepositOrderDelete)">
            <summary>
            预收款删除
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DepositController.GetDetail(System.Int64)">
            <summary>
            查询详细
            </summary>
            <param name="orderID">订单ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DepositController.GetNoDoneOrders(System.Int64,System.Int64)">
            <summary>
            查询剩余预收款
            </summary>
            <param name="hospitalID"></param>
            <param name="customerID"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DepositController.GetAllDeposit(System.Int64)">
            <summary>
            添加预收款界面获取可购买的预收款
            </summary>
            <param name="hospitalID"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.DepositRebateOrderController">
            <summary>
            退预收款相关接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DepositRebateOrderController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IDepositRebateOrderService)">
            <summary>
            构造函数
            </summary>
            <param name="depositRebateOrderService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DepositRebateOrderController.Add(Com.IFlyDog.APIDTO.DepositRebateOrderAdd)">
            <summary>
            添加
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DepositRebateOrderController.Delete(Com.IFlyDog.APIDTO.DepositOrderDelete)">
            <summary>
            删除
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DepositRebateOrderController.GetDetail(System.Int64,System.Int64,System.Int64)">
            <summary>
            查询详细
            </summary>
            <param name="userID">操作用户ID</param>
            <param name="customerID">顾客ID</param>
            <param name="orderID">订单ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DepositRebateOrderController.GetCanRebate(System.Int64,System.Int64)">
            <summary>
            获取可退代金券跟预收款
            </summary>
            <param name="hospitalID"></param>
            <param name="customerID"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.DeptController">
            <summary>
            部门相关API接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DeptController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IDeptService)">
            <summary>
            依赖注入类
            </summary>
            <param name="deptService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DeptController.Add(Com.IFlyDog.APIDTO.SmartDeptAdd)">
            <summary>
            添加部门[所属角色("CRM")]
            </summary>
            <param name="dto">部门信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DeptController.Update(Com.IFlyDog.APIDTO.SmartDeptUpdate)">
            <summary>
            部门修改[所属角色("CRM")]
            </summary>
            <param name="dto">部门信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DeptController.Get(System.Int64)">
            <summary>
            查询所有部门[所属角色("CRM")]
            </summary>
            <param name="hospitalID">所属医院ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DeptController.GetByID(System.Int64)">
            <summary>
            根据ID获取部门信息
            </summary>
            <param name="id">部门ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DeptController.Delete(Com.IFlyDog.APIDTO.DeptDelete)">
            <summary>
            删除部门（删除之前要先判断有没有引用）
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DeptController.GetSelect(System.Int64)">
            <summary>
            下拉菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DeptController.GetTreatDeptSelect(System.Int64)">
            <summary>
            治疗部门下拉菜单
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.DeptDeskController">
            <summary>
            科室中心相关接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DeptDeskController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IDeptDeskService)">
            <summary>
            
            </summary>
            <param name="deptDeskService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DeptDeskController.GetDeptVisitTodayAsync(Com.IFlyDog.APIDTO.DeptVisitSelect)">
            <summary>
            今日科室上门
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DeptDeskController.GetHospitalVisitTodayAsync(Com.IFlyDog.APIDTO.DeptVisitSelect)">
            <summary>
            今日医院上门
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DeptDeskController.GetCanOperation(System.Int64)">
            <summary>
            查询顾客可划扣项目
            </summary>
            <param name="customerID"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DeptDeskController.GetOperationToday(System.Int64)">
            <summary>
            获取今日划扣列表
            </summary>
            <param name="hospitalID"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DeptDeskController.GetOperationDetail(System.Int64)">
            <summary>
            划扣详细
            </summary>
            <param name="ID"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DeptDeskController.AddProduct(Com.IFlyDog.APIDTO.OperationProductAdd)">
            <summary>
            添加耗材
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DeptDeskController.DeleteProduct(Com.IFlyDog.APIDTO.OperationDelete)">
            <summary>
            删除耗材
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DeptDeskController.DeleteOperation(Com.IFlyDog.APIDTO.OperationDelete)">
            <summary>
            删除划扣记录
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DeptDeskController.AddOperation(Com.IFlyDog.APIDTO.OperationAdd)">
            <summary>
            添加划扣
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DeptDeskController.GetDefaultChargeInfo(System.Int64)">
            <summary>
            获取耗材默认详细
            </summary>
            <param name="operationID"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DeptDeskController.UpdateOperation(Com.IFlyDog.APIDTO.OperationUpdate)">
            <summary>
            更新划扣
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.DeptSendController">
            <summary>
            科室发料相关
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DeptSendController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IDeptSendService)">
            <summary>
            构造函数
            </summary>
            <param name="deptSendService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DeptSendController.GetDeptSendInfo(System.Int64,System.Int64)">
            <summary>
            科室发料请求
            </summary>
            <param name="hospitalID"></param>
            <param name="userID"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DeptSendController.Send(Com.IFlyDog.APIDTO.DeptSendAdd)">
            <summary>
            发货
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.DeptSendController.GetDeptSendToday(System.Int64,System.Int64)">
            <summary>
            今日发货记录
            </summary>
            <param name="hospitalID"></param>
            <param name="userID"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.EquityController">
            <summary>
            会员权益相关接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.EquityController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IEquityService)">
            <summary>
            构造函数 
            </summary>
            <param name="equityService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.EquityController.Add(Com.IFlyDog.APIDTO.EquityAdd)">
            <summary>
            添加会员权益
            </summary>
            <param name="dto">会员权益信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.EquityController.Update(Com.IFlyDog.APIDTO.EquityUpdate)">
            <summary>
            更新会员权益信息
            </summary>
            <param name="dto">会员权益信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.EquityController.StopOrUse(Com.IFlyDog.APIDTO.EquityStopOrUse)">
            <summary>
            会员权益停用
            </summary>
            <param name="dto">参数集</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.EquityController.Get">
            <summary>
            查询所有会员权益
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.EquityController.GetStatusIsTrue">
            <summary>
            只查询可用的会员权益
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.EquityController.GetByID(System.Int64)">
            <summary>
            查询会员权益详细
            </summary>
            <param name="id">会员权益ID</param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.FailtureCategoryController">
            <summary>
            未成交类型相关API
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.FailtureCategoryController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IFailtureCategoryService)">
            <summary>
            依赖注入类
            </summary>
            <param name="failtureCategoryService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.FailtureCategoryController.Add(Com.IFlyDog.APIDTO.FailtureCategoryAdd)">
            <summary>
            添加未成交类型
            </summary>
            <param name="dto">症状信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.FailtureCategoryController.Update(Com.IFlyDog.APIDTO.FailtureCategoryUpdate)">
            <summary>
            未成交类型修改
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.FailtureCategoryController.StopOrUse(Com.IFlyDog.APIDTO.FailtureCategoryStopOrUse)">
            <summary>
            未成交类型使用停用
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.FailtureCategoryController.Get">
            <summary>
            查询所有未成交类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.FailtureCategoryController.GetByID(System.Int64)">
            <summary>
            根据ID查询详细未成交类型
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.FailtureCategoryController.GetSelect">
            <summary>
            下拉菜单
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.FailtureController">
            <summary>
            未成交相关API
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.FailtureController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IFailtureService)">
            <summary>
            构造函数
            </summary>
            <param name="failtureService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.FailtureController.GetByCustomerID(System.Int64)">
            <summary>
            获取顾客未成交列表
            </summary>
            <param name="customerID">顾客ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.FailtureController.GetDetail(System.Int64)">
            <summary>
            获取未成交详细信息
            </summary>
            <param name="ID">咨记录ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.FailtureController.Update(Com.IFlyDog.APIDTO.FailtureAddUpdate)">
            <summary>
            未成交修改
            </summary>
            <param name="dto">未成交信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.FailtureController.Add(Com.IFlyDog.APIDTO.FailtureAddUpdate)">
            <summary>
            添加未成交
            </summary>
            <param name="dto">未成交信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.FailtureController.Delete(Com.IFlyDog.APIDTO.FailtureDelete)">
            <summary>
            未成交删除
            </summary>
            <param name="dto">删除信息</param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.FrontDeskController">
            <summary>
            前台接待相关接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.FrontDeskController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IFrontDeskService)">
            <summary>
            构造函数
            </summary>
            <param name="frontDeskService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.FrontDeskController.AddWaitAsync(Com.IFlyDog.APIDTO.WaitAdd)">
            <summary>
            添加候诊
            </summary>
            <param name="dto">候诊信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.FrontDeskController.GetWaitTodayAsync(System.Int64)">
            <summary>
            获取今日候诊列表
            </summary>
            <param name="hospitalID">医院ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.FrontDeskController.GetCustomerInfoBefaultTriageAsync(System.Int64,System.Int64)">
            <summary>
            分诊时查询出顾客粗略信息
            </summary>
            <param name="customerID">顾客ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.FrontDeskController.AddTriageAsync(Com.IFlyDog.APIDTO.TriageAdd)">
            <summary>
            分诊
            </summary>
            <param name="dto">分诊信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.FrontDeskController.GetTriageTodayAsync(System.Int64)">
            <summary>
            获取今日候诊列表
            </summary>
            <param name="hospitalID">医院ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.FrontDeskController.GetVisitTodayAsync(System.Int64)">
            <summary>
            获取今日上门记录
            </summary>
            <param name="hospitalID">医院ID</param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.HospitalController">
            <summary>
            医院管理api接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.HospitalController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IHospitalService)">
            <summary>
            依赖注入类
            </summary>
            <param name="hospitalService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.HospitalController.Get(System.Int64)">
            <summary>
            查询医院
            </summary>
            <param name="id">查询所有医院输入0，其他输入医院ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.HospitalController.GetSelect(System.Int64)">
            <summary>
            下拉菜单,传0查询所有医院
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.HospitalPrintController">
            <summary>
            打印设置api
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.HospitalPrintController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IHospitalPrintService)">
            <summary>
            依赖注入类
            </summary>
            <param name="hospitalPrintService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.HospitalPrintController.Update(Com.IFlyDog.APIDTO.HospitalPrintUpdate)">
            <summary>
            打印设置修改[所属角色("CRM")]
            </summary>
            <param name="dto">打印设置修改</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.HospitalPrintController.Get(System.String)">
            <summary>
            查询所有打印设置[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.HospitalPrintController.GetByHospitalAndType(System.Int64,System.String)">
            <summary>
            根据医院id，类型查询打印设置
            </summary>
            <param name="hospitalID"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.HospitalPrintController.GetByID(System.Int64)">
            <summary>
            根据id查询打印设置
            </summary>
            <param name="id">打印ID</param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.InpatientController">
            <summary>
            住院相关API接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.InpatientController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IInpatientService)">
            <summary>
            构造函数
            </summary>
            <param name="inpatientService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.InpatientController.In(Com.IFlyDog.APIDTO.InpatientAdd)">
            <summary>
            住院
            </summary>
            <param name="dto">住院信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.InpatientController.Out(Com.IFlyDog.APIDTO.Inpatientout)">
            <summary>
            出院
            </summary>
            <param name="dto">出院信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.InpatientController.GetIn(System.Int64)">
            <summary>
            住院工作台住院列表
            </summary>
            <param name="hospitalID"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.InvoiceController">
            <summary>
            采购发票管理api
            </summary>
        </member>
        <member name="F:Com.IFlyDog.FlyDogWebAPI.Controllers.InvoiceController._invoiceService">
            <summary>
            依赖注入
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.InvoiceController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IInvoiceService)">
            <summary>
            依赖注入方法重构
            </summary>
            <param name="invoiceService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.InvoiceController.Get(Com.IFlyDog.APIDTO.InvoiceSelect)">
            <summary>
            查询所有退货信息[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.InvoiceController.GetByID(System.Int64)">
            <summary>
            根据ID查询一条数据
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.InvoiceController.Add(Com.IFlyDog.APIDTO.InvoiceAdd)">
            <summary>
            添加
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.InvoiceController.Delete(Com.IFlyDog.APIDTO.InvoiceDelete)">
            <summary>
            删除采购发票管理[所属角色("CRM")]
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.ItemGroupController">
            <summary>
            报表项目组api
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ItemGroupController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IitemGroupService)">
            <summary>
            依赖注入类
            </summary>
            <param name="itemGroupService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ItemGroupController.Add(Com.IFlyDog.APIDTO.ItemGroupAdd)">
            <summary>
            添加报表项目[所属角色("CRM")]
            </summary>
            <param name="dto">添加报表项目</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ItemGroupController.Update(Com.IFlyDog.APIDTO.ItemGroupUpdate)">
            <summary>
            修改报表项目[所属角色("CRM")]
            </summary>
            <param name="dto">修改报表项目</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ItemGroupController.Get">
            <summary>
            查询所有报表项目[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ItemGroupController.GetByID(System.Int64)">
            <summary>
            根据id获取报表项目详情
            </summary>
            <param name="id">根据id获取报表项目详情</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ItemGroupController.Delete(Com.IFlyDog.APIDTO.ItemGroupDelete)">
            <summary>
            删除报表项目组[所属角色("CRM")]
            </summary>
            <param name="dto">删除报表项目组</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ItemGroupController.GetSelect">
            <summary>
            下拉菜单
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.KnowledgeCategoryController">
            <summary>
            知识分类相关API
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.KnowledgeCategoryController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IKnowledgeCategoryService)">
            <summary>
            依赖注入类
            </summary>
            <param name="knowledgeCategoryService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.KnowledgeCategoryController.Add(Com.IFlyDog.APIDTO.KnowledgeCategoryAdd)">
            <summary>
            添加知识分类[所属角色("CRM")]
            </summary>
            <param name="dto">知识分类</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.KnowledgeCategoryController.Update(Com.IFlyDog.APIDTO.KnowledgeCategoryUpdate)">
            <summary>
            知识分类修改[所属角色("CRM")]
            </summary>
            <param name="dto">知识分类</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.KnowledgeCategoryController.Get">
            <summary>
            查询所有知识分类[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.KnowledgeCategoryController.GetByID(System.Int64)">
            <summary>
            根据ID获取知识分类
            </summary>
            <param name="id">知识分类ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.KnowledgeCategoryController.GetSelect">
            <summary>
            下拉菜单
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.KnowledgeController">
            <summary>
            知识管理相关API
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.KnowledgeController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IKnowledgeService)">
            <summary>
            依赖注入类
            </summary>
            <param name="knowledgeService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.KnowledgeController.Add(Com.IFlyDog.APIDTO.Knowledge.KnowledgeAdd)">
            <summary>
            添加知识管理[所属角色("CRM")]
            </summary>
            <param name="dto">知识管理</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.KnowledgeController.Update(Com.IFlyDog.APIDTO.Knowledge.KnowledgeUpdate)">
            <summary>
            知识管理修改[所属角色("CRM")]
            </summary>
            <param name="dto">知识管理</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.KnowledgeController.Get(Com.IFlyDog.APIDTO.Knowledge.KnowledgeSelect)">
            <summary>
            查询所有知识管理[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.KnowledgeController.GetByID(System.Int64)">
            <summary>
            根据ID获取知识管理
            </summary>
            <param name="id">知识管理ID</param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.LoginController">
            <summary>
            登陆相关API
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.LoginController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ILoginService)">
            <summary>
            构造函数
            </summary>
            <param name="loginService"></param>
        </member>
        <!-- 对于成员“M:Com.IFlyDog.FlyDogWebAPI.Controllers.LoginController.Login(Com.IFlyDog.APIDTO.Login)”忽略有格式错误的 XML 注释 -->
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.MemberCategoryController">
            <summary>
            会员类型接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.MemberCategoryController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IMemberCategoryService)">
            <summary>
            构造函数
            </summary>
            <param name="memberCategoryService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.MemberCategoryController.Add(Com.IFlyDog.APIDTO.MemberCategoryAdd)">
            <summary>
            添加会员卡
            </summary>
            <param name="dto">会员卡信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.MemberCategoryController.Update(Com.IFlyDog.APIDTO.MemberCategoryUpdate)">
            <summary>
            更新会员卡信息
            </summary>
            <param name="dto">会员卡信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.MemberCategoryController.Delete(Com.IFlyDog.APIDTO.MemberCategoryDelete)">
            <summary>
            会员卡删除
            </summary>
            <param name="dto">参数集</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.MemberCategoryController.Get">
            <summary>
            查询所有会员卡
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.MemberCategoryController.GetByID(System.Int64)">
            <summary>
            查询会员卡详细
            </summary>
            <param name="id">会员卡ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.MemberCategoryController.AddMemberCategoryEquity(Com.IFlyDog.APIDTO.MemberCategoryEquityAdd)">
            <summary>
            添加会员权益
            </summary>
            <param name="dto">会员权益列表</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.MemberCategoryController.GetMemberCategoryEquitysByID(System.Int64)">
            <summary>
            查询详细会员权益
            </summary>
            <param name="id">会员ID</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Com.IFlyDog.FlyDogWebAPI.Controllers.MemberCategoryController.GetSelect”忽略有格式错误的 XML 注释 -->
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.MemberDeskController">
            <summary>
            会员工作台相关API
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.MemberDeskController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IMemberDeskService)">
            <summary>
            构造函数
            </summary>
            <param name="memeberDeskService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.MemberDeskController.Get(Com.IFlyDog.APIDTO.MemberDeskCustomerSelect)">
            <summary>
            查询会员
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.MemberDeskController.GetBirthday(System.Int64)">
            <summary>
            最近七日生日顾客
            </summary>
            <param name="hospitalID"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.OperationLogController">
            <summary>
            系统日志api
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OperationLogController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IOperationLogService)">
            <summary>
            依赖注入类
            </summary>
            <param name="operationLogService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OperationLogController.Get">
            <summary>
            查询所有系统日志信息[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OperationLogController.GetLogSelect">
            <summary>
            获取日志下拉
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OperationLogController.GetByID(System.Int64)">
            <summary>
            根据id查询日志信息
            </summary>
            <param name="id">日志ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OperationLogController.GetPages(Com.IFlyDog.APIDTO.OperationLogSelect)">
            <summary>
            分页查询系统日志
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.OptionController">
            <summary>
            系统设置api
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OptionController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IOptionService)">
            <summary>
            依赖注入类
            </summary>
            <param name="optionService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OptionController.UpdateAdvanceSettings(Com.IFlyDog.APIDTO.OptionUpdateAdvanceSettings)">
            <summary>
            修改预收款成交设置
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OptionController.UpdateAllowArrears(Com.IFlyDog.APIDTO.OptionUpdateAllowArrears)">
            <summary>
            修改是否允许欠款
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OptionController.UpdateContentTemplate(Com.IFlyDog.APIDTO.OptionUpdateContentTemplate)">
            <summary>
            修改咨询模板
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OptionController.UpdateCustomer(Com.IFlyDog.APIDTO.OptionUpdateCustomer)">
            <summary>
            修改客户自定义字段
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OptionController.UpdateIntegralNum(Com.IFlyDog.APIDTO.OptionUpdateIntegralNum)">
            <summary>
            修改积分比例
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OptionController.UpdateMakeTime(Com.IFlyDog.APIDTO.OptionUpdateMakeTime)">
            <summary>
            修改预约设置
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OptionController.UpdatePrivacyProtection(Com.IFlyDog.APIDTO.OptionUpdatePrivacyProtection)">
            <summary>
            修改隐私保护
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OptionController.UpdateRegistration(Com.IFlyDog.APIDTO.OptionUpdateRegistration)">
            <summary>
            修改挂号
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OptionController.UpdateWaitingDiagnosis(Com.IFlyDog.APIDTO.OptionUpdateWaitingDiagnosis)">
            <summary>
            修改等候是否开启
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OptionController.Get">
            <summary>
            查询所有系统设置[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.OrderController">
            <summary>
            订单相关接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OrderController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IOrderService)">
            <summary>
            构造函数
            </summary>
            <param name="orderService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OrderController.GetChargeSet(System.String,System.String)">
            <summary>
            查询套餐
            </summary>
            <param name="name"></param>
            <param name="pym"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OrderController.Add(Com.IFlyDog.APIDTO.OrderAdd)">
            <summary>
            添加订单
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OrderController.Delete(Com.IFlyDog.APIDTO.DepositOrderDelete)">
            <summary>
            订单删除
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OrderController.Update(Com.IFlyDog.APIDTO.OrderAdd)">
            <summary>
            添加订单
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OrderController.GetAppointCharges(System.Int64)">
            <summary>
            预约界面获取已购买项目
            </summary>
            <param name="customerID"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OrderController.GetNoDoneOrders(System.Int64,System.Int64)">
            <summary>
            获取未完成项目
            </summary>
            <param name="hospitalID"></param>
            <param name="customerID"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OrderController.GetDetail(System.Int64,System.Int64)">
            <summary>
            查询详细
            </summary>
            <param name="customerID">顾客ID</param>
            <param name="orderID">订单ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OrderController.GetDebtOrdes(Com.IFlyDog.APIDTO.DebtSelect)">
            <summary>
            欠款订单
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.OwnerShipController">
            <summary>
            客户所属权api
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OwnerShipController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IOwnerShipService)">
            <summary>
            依赖注入类
            </summary>
            <param name="ownerShipService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OwnerShipController.GetByFiltrate(System.String,System.Int64,System.Int64)">
            <summary>
            根据条件查询客户信息
            </summary>
            <param name="type">1 查询开发类型 2 查询咨询类型</param>
            <param name="userID">查询开发或者咨询人员客户</param>
            <param name="hospitalID">当前医院</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OwnerShipController.BatchConsultantUserAdd(Com.IFlyDog.APIDTO.BatchConsultantUser)">
            <summary>
            批量设置咨询人员归属权[所属角色("CRM")]
            </summary>
            <param name="dto">批量设置咨询人员归属权</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OwnerShipController.BatchDeveloperUserAdd(Com.IFlyDog.APIDTO.BatchDeveloperUser)">
            <summary>
            批量设置开发人员归属权[所属角色("CRM")]
            </summary>
            <param name="dto">批量设置开发人员归属权</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OwnerShipController.Get(System.Int64)">
            <summary>
            查询当前医院客户归属权管理[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OwnerShipController.SingleConsultantUserUpdateAdd(Com.IFlyDog.APIDTO.SingleConsultantUserUpdate)">
            <summary>
            单个添加咨询人员客户归属权[所属角色("CRM")]
            </summary>
            <param name="dto">单个添加咨询人员客户归属权</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OwnerShipController.SingleDeveLoperUserUpdateAdd(Com.IFlyDog.APIDTO.SingleDeveLoperUserUpdate)">
            <summary>
            单个添加开发人员客户归属权[所属角色("CRM")]
            </summary>
            <param name="dto">单个添加开发人员客户归属权</param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.OwnerShipOrderController">
            <summary>
            客户添加/编辑开发咨询人员信息
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OwnerShipOrderController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IOwnerShipOrderService)">
            <summary>
            依赖注入类
            </summary>
            <param name="ownerShipOrderService"></param>s
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OwnerShipOrderController.CustomerConsultanAdd(Com.IFlyDog.APIDTO.CustomerConsultanAdd)">
            <summary>
            添加/编辑咨询人员变更申请[所属角色("CRM")]
            </summary>
            <param name="dto">添加/编辑咨询人员变更申请</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OwnerShipOrderController.CustomerDeveloperAdd(Com.IFlyDog.APIDTO.CustomerDeveloperAdd)">
            <summary>
            添加/ 编辑开发人员变更申请[所属角色("CRM")]
            </summary>
            <param name="dto">添加/ 编辑开发人员变更申请</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.OwnerShipOrderController.GetCustomerUserInfo(Com.IFlyDog.APIDTO.CustomerUserSelect)">
            <summary>
            咨询/开发人员变更申请 加载[所属角色("CRM")]
            </summary>
            <param name="dto">咨询/开发人员变更申请 加载</param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.PhotoController">
            <summary>
            图片上传接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.PhotoController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IPhotoService)">
            <summary>
            构造函数
            </summary>
            <param name="photoService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.PhotoController.BatchAdd(Com.IFlyDog.APIDTO.BatchPhotoAdd)">
            <summary>
            图片批量上传
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.PhotoController.GetByCustomerID(System.Int64,System.Int64)">
            <summary>
            查询顾客照片详细
            </summary>
            <param name="userID"></param>
            <param name="customerID"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.PhotoController.Delete(Com.IFlyDog.APIDTO.PhotoDelete)">
            <summary>
            图片批量上传
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.PointController">
            <summary>
            积分相关接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.PointController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IPointService)">
            <summary>
            构造函数
            </summary>
            <param name="pointService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.PointController.GetPointInfo(System.Int64)">
            <summary>
            获取顾客积分信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.PointController.DeductPoint(Com.IFlyDog.APIDTO.DeductPoint)">
            <summary>
            手动增加扣减积分
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.PointController.PointToCoupon(Com.IFlyDog.APIDTO.PointToCoupon)">
            <summary>
            积分兑换券
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.PositionController">
            <summary>
            岗位分工api
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.PositionController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IPositionService)">
            <summary>
            依赖注入类
            </summary>
            <param name="positionService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.PositionController.Add(Com.IFlyDog.APIDTO.PositionAdd)">
            <summary>
            添加岗位分工[所属角色("CRM")]
            </summary>
            <param name="dto">添加岗位分工</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.PositionController.Update(Com.IFlyDog.APIDTO.PositionUpdate)">
            <summary>
            修改岗位分工[所属角色("CRM")]
            </summary>
            <param name="dto">修改岗位分工</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.PositionController.Get">
            <summary>
            查询所有岗位信息[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.PositionController.GetByID(System.Int64)">
            <summary>
            根据ID获取岗位信息
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.PositionController.GetSelect">
            <summary>
            下拉菜单
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.PromoterCommissionController">
            <summary>
            推荐佣金相关接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.PromoterCommissionController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IPromoterCommissionService)">
            <summary>
            构造函数
            </summary>
            <param name="promoterCommissionService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.PromoterCommissionController.CommissionOut(Com.IFlyDog.APIDTO.CommissionOut)">
            <summary>
            提现
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.ProvinceController">
            <summary>
            省相关API
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ProvinceController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IProvinceService)">
            <summary>
            构造函数
            </summary>
            <param name="provinceService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ProvinceController.GetSelect">
            <summary>
            下拉菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ProvinceController.GetCity(System.Int32)">
            <summary>
            根据省查询市
            </summary>
            <param name="provinceID">省ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ProvinceController.GetProvinceCity(System.String)">
            <summary>
            根据手机号自动识别省市
            </summary>
            <param name="phone">手机号</param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.ReceptionController">
            <summary>
            接诊相关接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ReceptionController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IReceptionService)">
            <summary>
            构造函数
            </summary>
            <param name="receptionService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ReceptionController.GetReceptionTodayAsync(System.Int64,System.Int64)">
            <summary>
            获取今日上门记录-接诊工作台
            </summary>
            <param name="hospitalID">医院ID</param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.RelationController">
            <summary>
            关系管理api
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.RelationController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IRelationService)">
            <summary>
            依赖注入类
            </summary>
            <param name="relationService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.RelationController.Add(Com.IFlyDog.APIDTO.RelationAdd)">
            <summary>
            添加关系
            </summary>
            <param name="dto">关系</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.RelationController.Update(Com.IFlyDog.APIDTO.RelationUpdate)">
            <summary>
            修改关系
            </summary>
            <param name="dto">关系信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.RelationController.Get">
            <summary>
            查询所有关系信息[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.RelationController.GetByID(System.Int64)">
            <summary>
            根据ID获取关系信息
            </summary>
            <param name="id">关系id</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.RelationController.Delete(Com.IFlyDog.APIDTO.RelationDelete)">
            <summary>
            删除关系信息
            </summary>
            <param name="dto">关系信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.RelationController.GetSelect">
            <summary>
            下拉菜单
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.ReportController">
            <summary>
            报表相关接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ReportController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IReportService)">
            <summary>
            构造函数
            </summary>
            <param name="reportService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ReportController.FailturePages(Com.IFlyDog.APIDTO.ReportFailtureSelect)">
            <summary>
            未成交报表
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ReportController.Failture(Com.IFlyDog.APIDTO.ReportFailtureSelect)">
            <summary>
            未成交报表，导出Excel
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ReportController.FailtureCount(Com.IFlyDog.APIDTO.ReportFailtureSelect)">
            <summary>
            未成交类型统计
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ReportController.DebtCashierPages(Com.IFlyDog.APIDTO.ReportDebtCashierSelect)">
            <summary>
            集团还款明细
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ReportController.DebtCashier(Com.IFlyDog.APIDTO.ReportDebtCashierSelect)">
            <summary>
            集团还款明细，导出Excel
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ReportController.DebtCashierDay(Com.IFlyDog.APIDTO.ReportDebtCashierSelect)">
            <summary>
            还款日合计
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ReportController.DebtCashierDayByHospital(Com.IFlyDog.APIDTO.ReportDebtCashierSelect)">
            <summary>
            集团还款各医院统计
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ReportController.OperationPages(Com.IFlyDog.APIDTO.ReportOperationSelect)">
            <summary>
            工作量明细
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ReportController.Operation(Com.IFlyDog.APIDTO.ReportOperationSelect)">
            <summary>
            工作量明细，导出Excel
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ReportController.AgePages(Com.IFlyDog.APIDTO.ReportAgeSelect)">
            <summary>
            年龄明细
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ReportController.Age(Com.IFlyDog.APIDTO.ReportAgeSelect)">
            <summary>
            年龄明细，导出Excel
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.RoleController">
            <summary>
            角色相关API
            </summary>
        </member>
        <member name="F:Com.IFlyDog.FlyDogWebAPI.Controllers.RoleController._roleService">
            <summary>
            依赖注入
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.RoleController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IRoleService)">
            <summary>
            依赖注入方法重构
            </summary>
            <param name="roleService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.RoleController.GetRoleMenu">
            <summary>
            查询所有菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.RoleController.Add(Com.IFlyDog.APIDTO.RoleAdd)">
            <summary>
            角色添加
            </summary>
            <param name="dto">角色信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.RoleController.GetAllRole(System.Int64,System.Int64)">
            <summary>
            查询所以角色
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.RoleController.GetRoleDetail(System.Int64,System.Int64,System.Int64)">
            <summary>
            查询角色详细
            </summary>
            <param name="userHositalID">操作人所属ID</param>
            <param name="hositalID">角色所属ID</param>
            <param name="roleID">角色ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.RoleController.Delete(Com.IFlyDog.APIDTO.RoleDelete)">
            <summary>
            角色删除
            </summary>
            <param name="dto">角色信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.RoleController.Update(Com.IFlyDog.APIDTO.RoleUpdate)">
            <summary>
            角色更新
            </summary>
            <param name="dto">角色信息</param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.SaleBackController">
            <summary>
            回款记录
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SaleBackController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ISaleBackService)">
            <summary>
            依赖注入类
            </summary>
            <param name="saleBackService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SaleBackController.Add(Com.IFlyDog.APIDTO.SaleBackAdd)">
            <summary>
            新增回款记录
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SaleBackController.Delete(Com.IFlyDog.APIDTO.SaleBackDelete)">
            <summary>
            删除回款记录
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SaleBackController.Get(Com.IFlyDog.APIDTO.SaleBackSelect)">
            <summary>
            查询所有回款记录
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SaleBackController.GetByID(System.String)">
            <summary>
            根据id查询回款记录
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SaleBackController.Update(Com.IFlyDog.APIDTO.SaleBackUpdate)">
            <summary>
            更新回款记录
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.SettlementController">
            <summary>
            结算相关接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SettlementController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ISettlementService)">
            <summary>
            构造函数
            </summary>
            <param name="settlement"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SettlementController.GetCashier(System.Int64)">
            <summary>
            结算时查询出的收银信息
            </summary>
            <param name="userID"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SettlementController.AddSettlement(Com.IFlyDog.APIDTO.SettlementAdd)">
            <summary>
            结算
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SettlementController.Get(Com.IFlyDog.APIDTO.SettlementSelect)">
            <summary>
            结算记录
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.ShareCategoryController">
            <summary>
            分享家api
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ShareCategoryController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IShareCategoryService)">
            <summary>
            构造函数
            </summary>
            <param name="shareCategoryService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ShareCategoryController.Add(Com.IFlyDog.APIDTO.ShareCategoryAdd)">
            <summary>
            添加分享家
            </summary>
            <param name="dto">添加分享家</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ShareCategoryController.Update(Com.IFlyDog.APIDTO.ShareCategoryUpdate)">
            <summary>
            更新分享家
            </summary>
            <param name="dto">更新分享家</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ShareCategoryController.Delete(Com.IFlyDog.APIDTO.ShareCategoryDelete)">
            <summary>
            删除分享家
            </summary>
            <param name="dto">参数集</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ShareCategoryController.Get">
            <summary>
            查询所有分享家
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ShareCategoryController.GetByID(System.Int64)">
            <summary>
            查询分享家详细
            </summary>
            <param name="id">会员卡ID</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Com.IFlyDog.FlyDogWebAPI.Controllers.ShareCategoryController.GetSelect”忽略有格式错误的 XML 注释 -->
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.ShiftController">
            <summary>
            排班api
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ShiftController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IShiftService)">
            <summary>
            依赖注入类
            </summary>
            <param name="shiftService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ShiftController.Add(Com.IFlyDog.APIDTO.ShiftAdd)">
            <summary>
            添加排班[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ShiftController.Update(Com.IFlyDog.APIDTO.ShiftUpdate)">
            <summary>
            修改排班[所属角色("CRM")]
            </summary>
            <param name="dto">修改排班</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ShiftController.Get(System.String,System.Int32)">
            <summary>
            查询所有排班信息[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ShiftController.GetByID(System.Int64)">
            <summary>
            根据ID获取排班信息
            </summary>
            <param name="id">排班ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.ShiftController.Delete(Com.IFlyDog.APIDTO.ShiftDelete)">
            <summary>
            删除排班信息[所属角色("CRM")]
            </summary>
            <param name="dto">删除排班信息</param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartItemController">
            <summary>
            报表项目api
            </summary>
        </member>
        <member name="F:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartItemController._smartItemService">
            <summary>
            依赖注入
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartItemController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ISmartItemService)">
            <summary>
            依赖注入方法重构
            </summary>
            <param name="smartItemService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartItemController.Get">
            <summary>
            查询所有报表项目组[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartItemController.GetByID(System.Int64)">
            <summary>
            根据ID获取报表项目组
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartItemController.Delete(Com.IFlyDog.APIDTO.SmartItemDelete)">
            <summary>
            删除报表项目组[所属角色("CRM")]
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartItemController.Add(Com.IFlyDog.APIDTO.SmartItemAdd)">
            <summary>
            添加报表项目组[所属角色("CRM")]
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartItemController.Update(Com.IFlyDog.APIDTO.SmartItemUpdate)">
            <summary>
            修改报表项目组[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartItemController.GetSelect">
            <summary>
            下拉菜单
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartProductCategoryController">
            <summary>
            药物品类型管理
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartProductCategoryController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ISmartProductCategoryService)">
            <summary>
            依赖注入类
            </summary>
            <param name="smartProductCategoryService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartProductCategoryController.Add(Com.IFlyDog.APIDTO.SmartProductCategoryAdd)">
            <summary>
            添加药物品类型[所属角色("CRM")]
            </summary>
            <param name="dto">药物品信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartProductCategoryController.Update(Com.IFlyDog.APIDTO.SmartProductCategoryUpdate)">
            <summary>
            药物品类型信息修改[所属角色("CRM")]
            </summary>
            <param name="dto">药物品信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartProductCategoryController.Get">
            <summary>
            查询所有药物品信息[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartProductCategoryController.GetByID(System.Int64)">
            <summary>
            根据ID获取药物品信息
            </summary>
            <param name="id">药物品ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartProductCategoryController.Delete(Com.IFlyDog.APIDTO.SmartProductCategoryDelete)">
            <summary>
            删除药物品信息[所属角色("CRM")]
            </summary>
            <param name="dto">删除药物品信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartProductCategoryController.GetSelect">
            <summary>
            下拉菜单
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartProductController">
            <summary>
            药物品设置api
            
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartProductController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ISmartProductService)">
            <summary>
            依赖注入类
            </summary>
            <param name="smartProductService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartProductController.Add(Com.IFlyDog.APIDTO.SmartProductAdd)">
            <summary>
            添加药物品设置[所属角色("CRM")]
            </summary>
            <param name="dto">药物品设置信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartProductController.Update(Com.IFlyDog.APIDTO.SmartProductUpdate)">
            <summary>
            药物品信息修改[所属角色("CRM")]
            </summary>
            <param name="dto">药物品信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartProductController.Get(Com.IFlyDog.APIDTO.SmartProductSelect)">
            <summary>
            查询所有药物品信息[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartProductController.GetAll(Com.IFlyDog.APIDTO.SmartProductSelect)">
            <summary>
            获取所有药物品信息不分页(后期可能还需要关联医院id，现在还没有，所以先查所有的)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartProductController.GetByWarehouseIDDataAll(Com.IFlyDog.APIDTO.SmartProductSelect)">
            <summary>
            根据仓库id查询仓库内的商品
            </summary>
            <param name="warehouseID">仓库id</param>
            <param name="type">类型1：入库2：调拨3：盘点4：科室领用</param>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartProductController.GetByID(System.Int64)">
            <summary>
            根据ID获取药物品信息
            </summary>
            <param name="id">药物品ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartProductController.SmartProductDispose(Com.IFlyDog.APIDTO.SmartProductStopOrUse)">
            <summary>
            停用启用药物品信息信息[所属角色("CRM")]
            </summary>
            <param name="dto">停用启用药物品信息</param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartPurchaseController">
            <summary>
            进货信息api控制器
            </summary>
        </member>
        <member name="F:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartPurchaseController._smartPurchaseService">
            <summary>
            依赖注入
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartPurchaseController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ISmartPurchaseService)">
            <summary>
            依赖注入方法重构
            </summary>
            <param name="smartPurchaseService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartPurchaseController.Get(Com.IFlyDog.APIDTO.SmartPurchaseSelect)">
            <summary>
            查询所有进货信息[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartPurchaseController.GetByHospitalID(Com.IFlyDog.APIDTO.SmartPurchaseSelect)">
            <summary>
            根据医院id查询当前医院所有的进货记录
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartPurchaseController.GetByID(System.Int64)">
            <summary>
            根据ID查询一条数据
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartPurchaseController.Add(Com.IFlyDog.APIDTO.SmartPurchaseAdd)">
            <summary>
            添加
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartPurchaseController.Update(Com.IFlyDog.APIDTO.SmartPurchaseUpdate)">
            <summary>
            修改
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartPurchaseController.Delete(Com.IFlyDog.APIDTO.SmartPurchaseDelete)">
            <summary>
            删除供应商管理[所属角色("CRM")]
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartPurchaseController.SmartPurchasePrint(System.String,System.Int64)">
            <summary>
            根据仓库进货id查询仓库进货详情拼接成字符串打印出来
            </summary>
            <param name="purchaspID"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartReturnController">
            <summary>
            退货信息api控制器
            </summary>
        </member>
        <member name="F:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartReturnController._smartReturnService">
            <summary>
            依赖注入
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartReturnController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ISmartReturnService)">
            <summary>
            依赖注入方法重构
            </summary>
            <param name="smartReturnService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartReturnController.Get(Com.IFlyDog.APIDTO.SmartReturnSelect)">
            <summary>
            查询所有退货信息[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartReturnController.GetByID(System.Int64)">
            <summary>
            根据ID查询一条数据
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartReturnController.Add(Com.IFlyDog.APIDTO.SmartReturnAdd)">
            <summary>
            添加
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartReturnController.Update(Com.IFlyDog.APIDTO.SmartReturnUpdate)">
            <summary>
            修改
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartReturnController.Delete(Com.IFlyDog.APIDTO.SmartReturnDelete)">
            <summary>
            删除退货管理[所属角色("CRM")]
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartReturnController.SmartReturnPrint(System.String,System.Int64)">
            <summary>
            根据仓库退货id查询仓库退货详情拼接成字符串打印出来
            </summary>
            <param name="returnID"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartShiftCategoryController">
            <summary>
            班次管理API相关接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartShiftCategoryController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ISmartShiftCategoryService)">
            <summary>
            依赖注入类
            </summary>
            <param name="smartShiftCategoryService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartShiftCategoryController.Add(Com.IFlyDog.APIDTO.SmartShiftCategoryAdd)">
            <summary>
            添加班次[所属角色("CRM")]
            </summary>
            <param name="dto">班次信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartShiftCategoryController.Update(Com.IFlyDog.APIDTO.SmartShiftCategoryUpdate)">
            <summary>
            班级信息修改[所属角色("CRM")]
            </summary>
            <param name="dto">班级信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartShiftCategoryController.SmartShiftCategoryDispose(Com.IFlyDog.APIDTO.SmartShiftCategoryDispose)">
            <summary>
            班级信息使用停用[所属角色("CRM")]
            </summary>
            <param name="dto">班级停用启用信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartShiftCategoryController.Get">
            <summary>
            查询所有班级信息[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartShiftCategoryController.GetByID(System.Int64)">
            <summary>
            根据ID获取部门信息
            </summary>
            <param name="id">部门ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartShiftCategoryController.GetSelect">
            <summary>
            下拉菜单
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartStockController">
            <summary>
            库存查询api
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartStockController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ISmartStockService)">
            <summary>
            依赖注入类
            </summary>
            <param name="smartStockService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartStockController.Get(Com.IFlyDog.APIDTO.SmartStockSelect)">
            <summary>
            查询所有供应商管理[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartStockController.GetByConditionData(Com.IFlyDog.APIDTO.SmartStockSelect)">
            <summary>
            根据条件查询库存药物品信息
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartStockController.GetByHospitalIDData(Com.IFlyDog.APIDTO.SmartStockSelect)">
            <summary>
            根据医院id查询库存商品，按照有效期排序
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartStockController.Add(Com.IFlyDog.APIDTO.SmartStockAdd)">
            <summary>
            添加库存[所属角色("CRM")]
            </summary>
            <param name="dto">添加库存</param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartSupplierController">
            <summary>
            供应商管理相关API
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartSupplierController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ISmartSupplierService)">
            <summary>
            依赖注入类
            </summary>
            <param name="smartSupplierService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartSupplierController.Add(Com.IFlyDog.APIDTO.SmartSupplierAdd)">
            <summary>
            添加供应商管理[所属角色("CRM")]
            </summary>
            <param name="dto">供应商管理</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartSupplierController.Update(Com.IFlyDog.APIDTO.SmartSupplierUpdate)">
            <summary>
            供应商管理修改[所属角色("CRM")]
            </summary>
            <param name="dto">供应商管理</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartSupplierController.GetAll(System.String)">
            <summary>
            获取全部供应商信息，不分页，主要给下拉列表使用 string hospitalID
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartSupplierController.Get(Com.IFlyDog.APIDTO.SmartSupplierSelect)">
            <summary>
            查询所有供应商管理[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartSupplierController.GetByID(System.Int64)">
            <summary>
            根据ID获取供应商管理
            </summary>
            <param name="id">供应商管理ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartSupplierController.Delete(Com.IFlyDog.APIDTO.SmartSupplierDelete)">
            <summary>
            删除供应商管理[所属角色("CRM")]
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartSupplierController.GetSelect(System.Int64)">
            <summary>
            下拉菜单
            </summary>
            <param name="hospitalID">医院ID</param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartToolController">
            <summary>
                工具API
            </summary>
        </member>
        <member name="F:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartToolController._smartToolService">
            <summary>
                注入
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartToolController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ISmartToolService)">
            <summary>
                注入
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartToolController.Add(Com.IFlyDog.APIDTO.SmartToolAdd)">
            <summary>
                添加工具
            </summary>
            <param name="dto">工具信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartToolController.Update(Com.IFlyDog.APIDTO.SmartToolUpdate)">
            <summary>
                更新工具信息
            </summary>
            <param name="dto">工具信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartToolController.StopOrUse(Com.IFlyDog.APIDTO.SmartToolStopOrUse)">
            <summary>
                工具使用停用
            </summary>
            <param name="dto">参数集</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartToolController.Get">
            <summary>
                查询所有工具
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartToolController.GetByID(System.Int64)">
            <summary>
                查询工具详细
            </summary>
            <param name="id">工具ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartToolController.GetSelect">
            <summary>
            下拉菜单
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartUnitController">
            <summary>
            单位管理API相关接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartUnitController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ISmartUnitService)">
            <summary>
            依赖注入类
            </summary>
            <param name="smartUnitService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartUnitController.Add(Com.IFlyDog.APIDTO.SmartUnitAdd)">
            <summary>
            添加单位[所属角色("CRM")]
            </summary>
            <param name="dto">单位信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartUnitController.Update(Com.IFlyDog.APIDTO.SmartUnitUpdate)">
            <summary>
            单位信息修改[所属角色("CRM")]
            </summary>
            <param name="dto">单位信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartUnitController.Get">
            <summary>
            查询所有单位信息[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartUnitController.GetByID(System.Int64)">
            <summary>
            根据ID获取单位信息
            </summary>
            <param name="id">单位ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartUnitController.Delete(Com.IFlyDog.APIDTO.SmartUnitDelete)">
            <summary>
            删除单位信息[所属角色("CRM")]
            </summary>
            <param name="dto">删除单位信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartUnitController.GetSelect">
            <summary>
            下拉菜单
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartUserController">
            <summary>
            查询用户数据API
            </summary>
        </member>
        <member name="F:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartUserController._smartUserService">
            <summary>
            依赖注入
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartUserController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ISmartUserService)">
            <summary>
            依赖注入方法重构
            </summary>
            <param name="smartUserService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartUserController.Get(Com.IFlyDog.APIDTO.SmartUserSelect)">
            <summary>
            查询所有
            </summary>
            <param name="dto">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartUserController.GetPages(Com.IFlyDog.APIDTO.SmartUserSelect)">
            <summary>
            查询所有（分页）
            </summary>
            <param name="dto">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartUserController.Add(Com.IFlyDog.APIDTO.UserAdd)">
            <summary>
            添加用户
            </summary>
            <param name="dto">用户信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartUserController.Update(Com.IFlyDog.APIDTO.UserAdd)">
            <summary>
            用户修改
            </summary>
            <param name="dto">用户信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartUserController.StopOrUse(Com.IFlyDog.APIDTO.UserStopOrUse)">
            <summary>
            用户使用停用
            </summary>
            <param name="dto">用户信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartUserController.PasswordReset(Com.IFlyDog.APIDTO.UserPasswordReset)">
            <summary>
            密码重置
            </summary>
            <param name="dto">重置信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartUserController.SetCustomerPermission(Com.IFlyDog.APIDTO.UserCustomerPermission)">
            <summary>
            设置顾客权限
            </summary>
            <param name="dto">访问权限</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartUserController.SetCustomerCallBackPermission(Com.IFlyDog.APIDTO.UserCustomerPermission)">
            <summary>
            设置访问权限
            </summary>
            <param name="dto">访问权限</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartUserController.GetDetail(System.Int64)">
            <summary>
            根据ID查询详细
            </summary>
            <param name="id">用户ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartUserController.GetCustomerPermissionDetail(System.Int64)">
            <summary>
            获取用户客户权限详细信息
            </summary>
            <param name="userID">用户ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartUserController.GetCallBackPermissionDetail(System.Int64)">
            <summary>
            获取用户回访权限详细信息
            </summary>
            <param name="userID">用户ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartUserController.GetFZUsers(System.String)">
            <summary>
            获取分疹人员列表
            </summary>
            <param name="hospitalID"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartUserController.GetCYPBUsers(Com.IFlyDog.APIDTO.SmartUserSelect)">
            <summary>
            获取参与排班用户
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartUserController.GetSSYYUsers(System.Int64,System.DateTime)">
            <summary>
            获取参与预约用户
            </summary>
            <param name="hospitalID"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartWarehouseController">
            <summary>
            仓库管理api控制器
            </summary>
        </member>
        <member name="F:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartWarehouseController._smartWarehouseService">
            <summary>
            依赖注入
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartWarehouseController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ISmartWarehouseService)">
            <summary>
            依赖注入方法重构
            </summary>
            <param name="smartWarehouseService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartWarehouseController.Get(System.String)">
            <summary>
            查询所有
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartWarehouseController.GetByUserId(System.String,System.String)">
            <summary>
            查询所有(根据用户id查询用户所能操作的仓库)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartWarehouseController.GetByID(System.Int64)">
            <summary>
            根据ID查询一条数据
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartWarehouseController.Add(Com.IFlyDog.APIDTO.SmartWarehouseAdd)">
            <summary>
            添加
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartWarehouseController.Update(Com.IFlyDog.APIDTO.SmartWarehouseUpdate)">
            <summary>
            修改
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartWarehouseController.Delete(Com.IFlyDog.APIDTO.SmartWarehouseDelete)">
            <summary>
            删除仓库信息（注 如果仓库里有商品了就不能再删除了）
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartWarehouseController.GetSelect(System.Int64)">
            <summary>
            下拉菜单,医院下所有仓库
            </summary>
            <param name="hospitalID">医院ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SmartWarehouseController.GetSelectByUserID(System.Int64,System.Int64)">
            <summary>
            下拉菜单,用户管辖的仓库
            </summary>
            <param name="hospitalID">医院ID</param>
            <param name="userID">用户ID</param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.StoreController">
            <summary>
            店铺相关接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.StoreController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IStoreService)">
            <summary>
            构造函数
            </summary>
            <param name="storeService"></param>
        </member>
        <!-- 对于成员“M:Com.IFlyDog.FlyDogWebAPI.Controllers.StoreController.GetSelect(System.Int64)”忽略有格式错误的 XML 注释 -->
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.StoreController.Add(Com.IFlyDog.APIDTO.StoreAdd)">
            <summary>
            添加店铺
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.StoreController.Delete(Com.IFlyDog.APIDTO.StoreDelete)">
            <summary>
            删除店家
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.StoreController.Get(Com.IFlyDog.APIDTO.StoreSelect)">
            <summary>
            查询全部店家信息
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.StoreController.GetNoPageStoreInfo(Com.IFlyDog.APIDTO.StoreSelect)">
             <summary>
            查询所有店家信息（不分页，主要给弹窗使用）
             </summary>
             <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.StoreController.GetByHCCount(System.String,System.String)">
            <summary>
             根据医院id，用户id查询当前用户是否有权限操作更新等方法
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.StoreController.GetByID(System.String)">
            <summary>
            根据id查询详情
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.StoreController.GetByIDStoreBasicData(System.String)">
            <summary>
            根据店家id获取店家基础信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.StoreController.GetByIDStoreCommissionData(System.String)">
            <summary>
            根据店家id获取店家佣金记录
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.StoreController.GetByIDStoreManagerData(System.String)">
            <summary>
            根据店家id获取店家客户列表
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.StoreController.GetByIDStoreSaleBackData(System.String)">
            <summary>
            根据店家id获取店家回款记录
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.StoreController.Update(Com.IFlyDog.APIDTO.StoreUpdate)">
            <summary>
            修改店家
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.StoreManagerController">
            <summary>
            店家负责人api
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.StoreManagerController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IStoreManagerService)">
            <summary>
            依赖注入类
            </summary>
            <param name="storeManagerService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.StoreManagerController.Add(Com.IFlyDog.APIDTO.StoreManagerAdd)">
            <summary>
            添加店铺负责人[所属角色("CRM")]
            </summary>
            <param name="dto">单位信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.StoreManagerController.GetByHospitalID(System.String,System.String)">
            <summary>
            根据医院id查询所有店家负责人
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.StoreManagerController.GetUserID(System.String)">
            <summary>
            根据用户id查询用户所负责的店家信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.StoreManagerController.Delete(Com.IFlyDog.APIDTO.StoreManagerDelete)">
            <summary>
            删除店铺负责人[所属角色("CRM")]
            </summary>
            <param name="dto">删除店铺负责人</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.StoreManagerController.DeleteByUserID(Com.IFlyDog.APIDTO.StoreManagerDelete)">
            <summary>
            删除当前负责人所负责的所有店铺
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.SurgeryController">
            <summary>
            手术预约相关接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SurgeryController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ISurgeryService)">
            <summary>
            构造函数
            </summary>
            <param name="surgeryService">服务</param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SurgeryController.Add(Com.IFlyDog.APIDTO.SurgeryAdd)">
            <summary>
            添加预约
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SurgeryController.Delete(Com.IFlyDog.APIDTO.SurgeryDelete)">
            <summary>
            删除
            </summary>
            <param name="dto">删除信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SurgeryController.Update(Com.IFlyDog.APIDTO.SurgeryUpdate)">
            <summary>
            修改
            </summary>
            <param name="dto">修改信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SurgeryController.GetDetail(System.Int64)">
            <summary>
            获取预约详细信息
            </summary>
            <param name="ID">预约记录ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SurgeryController.Get(System.Int64,System.DateTime)">
            <summary>
            手术排台
            </summary>
            <param name="hospitalID"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SurgeryController.Done(Com.IFlyDog.APIDTO.SugeryDone)">
            <summary>
            开始结束手术
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.SymptomController">
            <summary>
            症状相关API
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SymptomController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ISymptomService)">
            <summary>
            依赖注入类
            </summary>
            <param name="symptomService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SymptomController.Add(Com.IFlyDog.APIDTO.SymptomAdd)">
            <summary>
            添加症状
            </summary>
            <param name="dto">症状信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SymptomController.Update(Com.IFlyDog.APIDTO.SymptomUpdate)">
            <summary>
            症状修改
            </summary>
            <param name="dto">症状信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SymptomController.StopOrUse(Com.IFlyDog.APIDTO.SymptomStopOrUse)">
            <summary>
            症状使用停用
            </summary>
            <param name="dto">症状停用使用信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SymptomController.Get">
            <summary>
            查询所有症状
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SymptomController.GetStateIsOk">
            <summary>
            查询所有可用的症状信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SymptomController.ItemGetSymptom">
            <summary>
            检测症状用接口
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SymptomController.GetByID(System.Int64)">
            <summary>
            根据ID查询症状详细信息
            </summary>
            <param name="id">症状id</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.SymptomController.GetSelect">
            <summary>
            下拉菜单
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.TagController">
            <summary>
            顾客标签相关API
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.TagController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ITagService)">
            <summary>
            构造函数
            </summary>
            <param name="tagService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.TagController.Add(Com.IFlyDog.APIDTO.TagAdd)">
            <summary>
            添加顾客标签
            </summary>
            <param name="dto">顾客标签信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.TagController.Update(Com.IFlyDog.APIDTO.TagUpdate)">
            <summary>
            更新顾客标签信息
            </summary>
            <param name="dto">顾客标签信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.TagController.StopOrUse(Com.IFlyDog.APIDTO.TagStopOrUse)">
            <summary>
            顾客标签停用
            </summary>
            <param name="dto">参数集</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.TagController.Get">
            <summary>
            查询所有顾客标签
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.TagController.GetByIsOk">
            <summary>
            查询所有可用的标签
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.TagController.GetByID(System.Int64)">
            <summary>
            查询顾客标签详细
            </summary>
            <param name="id">顾客标签ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.TagController.GetSelect">
            <summary>
            下拉菜单
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.TagGroupController">
            <summary>
            标签组api
            </summary>
        </member>
        <member name="F:Com.IFlyDog.FlyDogWebAPI.Controllers.TagGroupController._tagGroupService">
            <summary>
            依赖注入
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.TagGroupController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ITagGroupService)">
            <summary>
            依赖注入方法重构
            </summary>
            <param name="tagGroupService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.TagGroupController.Get">
            <summary>
            查询所有标签组信息[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.TagGroupController.GetByID(System.Int64)">
            <summary>
            根据ID获取标签组信息
            </summary>
            <param name="id">单位ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.TagGroupController.Delete(Com.IFlyDog.APIDTO.TagGroupDelete)">
            <summary>
            删除标签组信息s[所属角色("CRM")]
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.TagGroupController.Add(Com.IFlyDog.APIDTO.TagGroupAdd)">
            <summary>
            添加标签组[所属角色("CRM")]
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.TagGroupController.Update(Com.IFlyDog.APIDTO.TagGroupUpdate)">
            <summary>
            修改标签组[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.TreatController">
            <summary>
            治疗预约相关接口
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.TreatController.#ctor(Com.FlyDog.IFlyDogAPIBLL.ITreatService)">
            <summary>
            构造函数
            </summary>
            <param name="treatService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.TreatController.Add(Com.IFlyDog.APIDTO.TreatAdd)">
            <summary>
            添加预约
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.TreatController.Delete(Com.IFlyDog.APIDTO.SurgeryDelete)">
            <summary>
            删除
            </summary>
            <param name="dto">删除信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.TreatController.Update(Com.IFlyDog.APIDTO.TreatUpdate)">
            <summary>
            修改
            </summary>
            <param name="dto">修改信息</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.TreatController.GetDetail(System.Int64)">
            <summary>
            获取预约详细信息
            </summary>
            <param name="ID">预约记录ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.TreatController.Get(System.Int64,System.DateTime,System.DateTime)">
            <summary>
            获取预约记录
            </summary>
            <param name="hospitalID"></param>
            <param name="startTime"></param>
            <param name="endTime"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.UseController">
            <summary>
            科室领用api控制器
            </summary>
        </member>
        <member name="F:Com.IFlyDog.FlyDogWebAPI.Controllers.UseController._useService">
            <summary>
            依赖注入
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.UseController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IUseService)">
            <summary>
            依赖注入方法重构
            </summary>
            <param name="useService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.UseController.Get(Com.IFlyDog.APIDTO.UseSelect)">
            <summary>
            查询所有退货信息[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.UseController.GetByID(System.Int64)">
            <summary>
            根据ID查询一条数据
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.UseController.Add(Com.IFlyDog.APIDTO.UseAdd)">
            <summary>
            添加
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.UseController.SmartUsePrint(System.String,System.Int64)">
            <summary>
            根据科室领用id查询科室领用详情拼接成字符串打印出来
            </summary>
            <param name="UseID"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.UserDiscountController">
            <summary>
            用户折扣api
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.UserDiscountController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IUserDiscountService)">
            <summary>
            依赖注入类
            </summary>
            <param name="userDiscountService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.UserDiscountController.Add(Com.IFlyDog.APIDTO.UserDiscountAdd)">
            <summary>
            添加用户折扣[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.UserDiscountController.Update(Com.IFlyDog.APIDTO.UserDiscountUpdate)">
            <summary>
            修改用户折扣[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.UserDiscountController.Get">
            <summary>
            查询所有用户折扣信息[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.UserDiscountController.GetPage(Com.IFlyDog.APIDTO.UserDiscountSelect)">
            <summary>
            获取全部用户折扣信息（分页）
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.UserDiscountController.GetByID(System.Int64)">
            <summary>
            根据id获取用户折扣信息
            </summary>
            <param name="id">单位ID</param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.UserTriggerController">
            <summary>
            用户通知
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.UserTriggerController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IUserTriggerService)">
            <summary>
            依赖注入类
            </summary>
            <param name="userTriggerService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.UserTriggerController.Add(Com.IFlyDog.APIDTO.UserTriggerAdd)">
            <summary>
            添加用户通知[所属角色("CRM")]
            </summary>
            <param name="dto">添加用户通知</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.UserTriggerController.Update(Com.IFlyDog.APIDTO.UserTriggerUpdate)">
            <summary>
            修改用户通知[所属角色("CRM")]
            </summary>
            <param name="dto">修改用户通知</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.UserTriggerController.Get">
            <summary>
            查询所有用户通知[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.UserTriggerController.GetByID(System.Int64)">
            <summary>
            根据ID获取单位信息
            </summary>
            <param name="id">单位ID</param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.UserTriggerController.Delete(Com.IFlyDog.APIDTO.UserTriggerDelete)">
            <summary>
            删除用户通知[所属角色("CRM")]
            </summary>
            <param name="dto">删除用户通知</param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Controllers.WXOptionController">
            <summary>
            微信系统设置api
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.WXOptionController.#ctor(Com.FlyDog.IFlyDogAPIBLL.IWXOptionService)">
            <summary>
            依赖注入类
            </summary>
            <param name="wXOptionService"></param>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.WXOptionController.WXOptionInsertPromoteLevel(Com.IFlyDog.APIDTO.WXOptionUpdatePromoteLevel)">
            <summary>
            微信系统设置级别提点
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.WXOptionController.WXOptionOpenCommission(Com.IFlyDog.APIDTO.WXOptionOpenCommission)">
            <summary>
            微信系统设置佣金提成
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.WXOptionController.WXOptionUpdateNoDiscount(Com.IFlyDog.APIDTO.WXOptionUpdateNoDiscount)">
            <summary>
            微信系统设置修改不提点折扣小于
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.WXOptionController.WXOptionUpdateRecommenDay(Com.IFlyDog.APIDTO.WXOptionUpdateRecommenDay)">
            <summary>
            微信系统设置修改推荐时限
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.WXOptionController.WXOptionUpdateUserSendVolume(Com.IFlyDog.APIDTO.WXOptionUpdateUserSendVolume)">
            <summary>
            更新被推荐用户送券
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.WXOptionController.Get">
            <summary>
            获取微信系统所有设置[所属角色("CRM")]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.WXOptionController.WXOptionDefaultChannel(Com.IFlyDog.APIDTO.WXOptionDefaultChannel)">
            <summary>
            微信系统设置默认渠道
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Controllers.WXOptionController.WXOptionSpecialChannel(Com.IFlyDog.APIDTO.WXOptionSpecialChannel)">
            <summary>
            微信系统设置特殊渠道
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Filters.FlyDogSignFilterAttribute">
            <summary>
            </summary>
        </member>
        <member name="F:Com.IFlyDog.FlyDogWebAPI.Filters.FlyDogSignFilterAttribute.helper">
            <summary>
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Filters.FlyDogSignFilterAttribute.GeSignKey(System.String)">
            <summary>
            </summary>
            <param name="appid"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.Filters.FlyDogTokenFilterAttribute">
            <summary>
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.Filters.FlyDogTokenFilterAttribute.IsExist(System.String)">
            <summary>
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:Com.IFlyDog.FlyDogWebAPI.WebApiApplication">
            <summary>
            
            </summary>
        </member>
        <member name="M:Com.IFlyDog.FlyDogWebAPI.WebApiApplication.Application_Start">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
